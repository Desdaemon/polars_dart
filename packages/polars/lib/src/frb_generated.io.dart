// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.18.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables

import 'dart:async';
import 'dart:convert';
import 'dart:ffi' as ffi;
import 'frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_io.dart';
import 'wrapper/df.dart';
import 'wrapper/entry.dart';
import 'wrapper/expr.dart';
import 'wrapper/list.dart';
import 'wrapper/series.dart';
import 'wrapper/str.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PExprPtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExprPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_PSeriesPtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeriesPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_SpecialEqPSeriesPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeriesPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_DataFramePtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFramePtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_LazyFramePtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFramePtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_LazyGroupByPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupByPtr;

  CrossPlatformFinalizerArg
      get rust_arc_decrement_strong_count_OptionSchemaPtr => wire
          ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchemaPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SchemaPtr => wire
      ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchemaPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_SeriesPtr => wire
      ._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeriesPtr;

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_VecSeriesPtr =>
      wire._rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeriesPtr;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  DataFrame
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          dynamic raw);

  @protected
  LazyFrame
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
          dynamic raw);

  @protected
  LazyGroupBy
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
          dynamic raw);

  @protected
  Schema
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
          dynamic raw);

  @protected
  Series
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          dynamic raw);

  @protected
  VecSeries
      dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
          dynamic raw);

  @protected
  Duration dco_decode_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Local(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_Chrono_Utc(dynamic raw);

  @protected
  PExpr dco_decode_RustOpaque_AssertUnwindSafePExpr(dynamic raw);

  @protected
  PSeries dco_decode_RustOpaque_AssertUnwindSafePSeries(dynamic raw);

  @protected
  SpecialEqPSeries dco_decode_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
      dynamic raw);

  @protected
  DataFrame
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          dynamic raw);

  @protected
  LazyFrame
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
          dynamic raw);

  @protected
  LazyGroupBy
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
          dynamic raw);

  @protected
  Schema
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
          dynamic raw);

  @protected
  Series
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          dynamic raw);

  @protected
  VecSeries
      dco_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
          dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  AggExpr dco_decode_agg_expr(dynamic raw);

  @protected
  bool dco_decode_bool(dynamic raw);

  @protected
  Duration dco_decode_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Local(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime dco_decode_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  AggExpr dco_decode_box_autoadd_agg_expr(dynamic raw);

  @protected
  DataType dco_decode_box_autoadd_data_type(dynamic raw);

  @protected
  double dco_decode_box_autoadd_f_64(dynamic raw);

  @protected
  int dco_decode_box_autoadd_i_64(dynamic raw);

  @protected
  LiteralValue dco_decode_box_autoadd_literal_value(dynamic raw);

  @protected
  SortOptions dco_decode_box_autoadd_sort_options(dynamic raw);

  @protected
  WindowType dco_decode_box_autoadd_window_type(dynamic raw);

  @protected
  DataType dco_decode_box_data_type(dynamic raw);

  @protected
  Expr dco_decode_box_expr(dynamic raw);

  @protected
  dynamic dco_decode_dartabi(dynamic raw);

  @protected
  DataType dco_decode_data_type(dynamic raw);

  @protected
  Excluded dco_decode_excluded(dynamic raw);

  @protected
  Expr dco_decode_expr(dynamic raw);

  @protected
  double dco_decode_f_32(dynamic raw);

  @protected
  double dco_decode_f_64(dynamic raw);

  @protected
  Field dco_decode_field(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  int dco_decode_i_64(dynamic raw);

  @protected
  List<Duration> dco_decode_list_Chrono_Duration(dynamic raw);

  @protected
  List<String> dco_decode_list_String(dynamic raw);

  @protected
  List<bool> dco_decode_list_bool(dynamic raw);

  @protected
  List<dynamic> dco_decode_list_dartabi(dynamic raw);

  @protected
  List<DataType> dco_decode_list_data_type(dynamic raw);

  @protected
  List<Excluded> dco_decode_list_excluded(dynamic raw);

  @protected
  List<Expr> dco_decode_list_expr(dynamic raw);

  @protected
  List<Field> dco_decode_list_field(dynamic raw);

  @protected
  List<String?> dco_decode_list_opt_String(dynamic raw);

  @protected
  List<Duration?> dco_decode_list_opt_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  List<DateTime?> dco_decode_list_opt_box_autoadd_Chrono_Local(dynamic raw);

  @protected
  List<DateTime?> dco_decode_list_opt_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  List<DateTime?> dco_decode_list_opt_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  List<double?> dco_decode_list_opt_box_autoadd_f_64(dynamic raw);

  @protected
  List<int?> dco_decode_list_opt_box_autoadd_i_64(dynamic raw);

  @protected
  Float64List dco_decode_list_prim_f_64_strict(dynamic raw);

  @protected
  Int64List dco_decode_list_prim_i_64_strict(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  LiteralValue dco_decode_literal_value(dynamic raw);

  @protected
  Literals dco_decode_literals(dynamic raw);

  @protected
  Operator dco_decode_operator(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  Duration? dco_decode_opt_box_autoadd_Chrono_Duration(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Local(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Naive(dynamic raw);

  @protected
  DateTime? dco_decode_opt_box_autoadd_Chrono_Utc(dynamic raw);

  @protected
  double? dco_decode_opt_box_autoadd_f_64(dynamic raw);

  @protected
  int? dco_decode_opt_box_autoadd_i_64(dynamic raw);

  @protected
  QuantileInterpolOptions dco_decode_quantile_interpol_options(dynamic raw);

  @protected
  (int, int) dco_decode_record_usize_usize(dynamic raw);

  @protected
  SortOptions dco_decode_sort_options(dynamic raw);

  @protected
  TimeUnit dco_decode_time_unit(dynamic raw);

  @protected
  int dco_decode_u_32(dynamic raw);

  @protected
  int dco_decode_u_64(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  int dco_decode_usize(dynamic raw);

  @protected
  WindowMapping dco_decode_window_mapping(dynamic raw);

  @protected
  WindowType dco_decode_window_type(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  DataFrame
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          SseDeserializer deserializer);

  @protected
  LazyFrame
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
          SseDeserializer deserializer);

  @protected
  LazyGroupBy
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
          SseDeserializer deserializer);

  @protected
  Schema
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
          SseDeserializer deserializer);

  @protected
  Series
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          SseDeserializer deserializer);

  @protected
  VecSeries
      sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
          SseDeserializer deserializer);

  @protected
  Duration sse_decode_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Local(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_Chrono_Utc(SseDeserializer deserializer);

  @protected
  PExpr sse_decode_RustOpaque_AssertUnwindSafePExpr(
      SseDeserializer deserializer);

  @protected
  PSeries sse_decode_RustOpaque_AssertUnwindSafePSeries(
      SseDeserializer deserializer);

  @protected
  SpecialEqPSeries sse_decode_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
      SseDeserializer deserializer);

  @protected
  DataFrame
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          SseDeserializer deserializer);

  @protected
  LazyFrame
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
          SseDeserializer deserializer);

  @protected
  LazyGroupBy
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
          SseDeserializer deserializer);

  @protected
  Schema
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
          SseDeserializer deserializer);

  @protected
  Series
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          SseDeserializer deserializer);

  @protected
  VecSeries
      sse_decode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
          SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  AggExpr sse_decode_agg_expr(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  Duration sse_decode_box_autoadd_Chrono_Duration(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Local(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Naive(SseDeserializer deserializer);

  @protected
  DateTime sse_decode_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  AggExpr sse_decode_box_autoadd_agg_expr(SseDeserializer deserializer);

  @protected
  DataType sse_decode_box_autoadd_data_type(SseDeserializer deserializer);

  @protected
  double sse_decode_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  int sse_decode_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  LiteralValue sse_decode_box_autoadd_literal_value(
      SseDeserializer deserializer);

  @protected
  SortOptions sse_decode_box_autoadd_sort_options(SseDeserializer deserializer);

  @protected
  WindowType sse_decode_box_autoadd_window_type(SseDeserializer deserializer);

  @protected
  DataType sse_decode_box_data_type(SseDeserializer deserializer);

  @protected
  Expr sse_decode_box_expr(SseDeserializer deserializer);

  @protected
  dynamic sse_decode_dartabi(SseDeserializer deserializer);

  @protected
  DataType sse_decode_data_type(SseDeserializer deserializer);

  @protected
  Excluded sse_decode_excluded(SseDeserializer deserializer);

  @protected
  Expr sse_decode_expr(SseDeserializer deserializer);

  @protected
  double sse_decode_f_32(SseDeserializer deserializer);

  @protected
  double sse_decode_f_64(SseDeserializer deserializer);

  @protected
  Field sse_decode_field(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  int sse_decode_i_64(SseDeserializer deserializer);

  @protected
  List<Duration> sse_decode_list_Chrono_Duration(SseDeserializer deserializer);

  @protected
  List<String> sse_decode_list_String(SseDeserializer deserializer);

  @protected
  List<bool> sse_decode_list_bool(SseDeserializer deserializer);

  @protected
  List<dynamic> sse_decode_list_dartabi(SseDeserializer deserializer);

  @protected
  List<DataType> sse_decode_list_data_type(SseDeserializer deserializer);

  @protected
  List<Excluded> sse_decode_list_excluded(SseDeserializer deserializer);

  @protected
  List<Expr> sse_decode_list_expr(SseDeserializer deserializer);

  @protected
  List<Field> sse_decode_list_field(SseDeserializer deserializer);

  @protected
  List<String?> sse_decode_list_opt_String(SseDeserializer deserializer);

  @protected
  List<Duration?> sse_decode_list_opt_box_autoadd_Chrono_Duration(
      SseDeserializer deserializer);

  @protected
  List<DateTime?> sse_decode_list_opt_box_autoadd_Chrono_Local(
      SseDeserializer deserializer);

  @protected
  List<DateTime?> sse_decode_list_opt_box_autoadd_Chrono_Naive(
      SseDeserializer deserializer);

  @protected
  List<DateTime?> sse_decode_list_opt_box_autoadd_Chrono_Utc(
      SseDeserializer deserializer);

  @protected
  List<double?> sse_decode_list_opt_box_autoadd_f_64(
      SseDeserializer deserializer);

  @protected
  List<int?> sse_decode_list_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  Float64List sse_decode_list_prim_f_64_strict(SseDeserializer deserializer);

  @protected
  Int64List sse_decode_list_prim_i_64_strict(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  LiteralValue sse_decode_literal_value(SseDeserializer deserializer);

  @protected
  Literals sse_decode_literals(SseDeserializer deserializer);

  @protected
  Operator sse_decode_operator(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  Duration? sse_decode_opt_box_autoadd_Chrono_Duration(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Local(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Naive(
      SseDeserializer deserializer);

  @protected
  DateTime? sse_decode_opt_box_autoadd_Chrono_Utc(SseDeserializer deserializer);

  @protected
  double? sse_decode_opt_box_autoadd_f_64(SseDeserializer deserializer);

  @protected
  int? sse_decode_opt_box_autoadd_i_64(SseDeserializer deserializer);

  @protected
  QuantileInterpolOptions sse_decode_quantile_interpol_options(
      SseDeserializer deserializer);

  @protected
  (int, int) sse_decode_record_usize_usize(SseDeserializer deserializer);

  @protected
  SortOptions sse_decode_sort_options(SseDeserializer deserializer);

  @protected
  TimeUnit sse_decode_time_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_u_32(SseDeserializer deserializer);

  @protected
  int sse_decode_u_64(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  int sse_decode_usize(SseDeserializer deserializer);

  @protected
  WindowMapping sse_decode_window_mapping(SseDeserializer deserializer);

  @protected
  WindowType sse_decode_window_type(SseDeserializer deserializer);

  @protected
  int cst_encode_Chrono_Duration(Duration raw) {
    return cst_encode_i_64(raw.inMicroseconds);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_String(String raw) {
    return cst_encode_list_prim_u_8_strict(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_Chrono_Duration(Duration raw) {
    return wire
        .cst_new_box_autoadd_Chrono_Duration(cst_encode_Chrono_Duration(raw));
  }

  @protected
  ffi.Pointer<wire_cst_agg_expr> cst_encode_box_autoadd_agg_expr(AggExpr raw) {
    final ptr = wire.cst_new_box_autoadd_agg_expr();
    cst_api_fill_to_wire_agg_expr(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_box_autoadd_bool(bool raw) {
    return wire.cst_new_box_autoadd_bool(cst_encode_bool(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_closed_window(
      ClosedWindow raw) {
    return wire
        .cst_new_box_autoadd_closed_window(cst_encode_closed_window(raw));
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_csv_encoding(CsvEncoding raw) {
    return wire.cst_new_box_autoadd_csv_encoding(cst_encode_csv_encoding(raw));
  }

  @protected
  ffi.Pointer<wire_cst_data_type> cst_encode_box_autoadd_data_type(
      DataType raw) {
    final ptr = wire.cst_new_box_autoadd_data_type();
    cst_api_fill_to_wire_data_type(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_expr> cst_encode_box_autoadd_expr(Expr raw) {
    final ptr = wire.cst_new_box_autoadd_expr();
    cst_api_fill_to_wire_expr(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_box_autoadd_f_64(double raw) {
    return wire.cst_new_box_autoadd_f_64(cst_encode_f_64(raw));
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_box_autoadd_i_64(int raw) {
    return wire.cst_new_box_autoadd_i_64(cst_encode_i_64(raw));
  }

  @protected
  ffi.Pointer<wire_cst_literal_value> cst_encode_box_autoadd_literal_value(
      LiteralValue raw) {
    final ptr = wire.cst_new_box_autoadd_literal_value();
    cst_api_fill_to_wire_literal_value(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_literals> cst_encode_box_autoadd_literals(Literals raw) {
    final ptr = wire.cst_new_box_autoadd_literals();
    cst_api_fill_to_wire_literals(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_null_values> cst_encode_box_autoadd_null_values(
      NullValues raw) {
    final ptr = wire.cst_new_box_autoadd_null_values();
    cst_api_fill_to_wire_null_values(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_row_count> cst_encode_box_autoadd_row_count(
      RowCount raw) {
    final ptr = wire.cst_new_box_autoadd_row_count();
    cst_api_fill_to_wire_row_count(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_sort_options> cst_encode_box_autoadd_sort_options(
      SortOptions raw) {
    final ptr = wire.cst_new_box_autoadd_sort_options();
    cst_api_fill_to_wire_sort_options(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_box_autoadd_time_unit(TimeUnit raw) {
    return wire.cst_new_box_autoadd_time_unit(cst_encode_time_unit(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_box_autoadd_u_32(int raw) {
    return wire.cst_new_box_autoadd_u_32(cst_encode_u_32(raw));
  }

  @protected
  ffi.Pointer<ffi.Uint64> cst_encode_box_autoadd_u_64(int raw) {
    return wire.cst_new_box_autoadd_u_64(cst_encode_u_64(raw));
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_box_autoadd_usize(int raw) {
    return wire.cst_new_box_autoadd_usize(cst_encode_usize(raw));
  }

  @protected
  ffi.Pointer<wire_cst_window_type> cst_encode_box_autoadd_window_type(
      WindowType raw) {
    final ptr = wire.cst_new_box_autoadd_window_type();
    cst_api_fill_to_wire_window_type(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_data_type> cst_encode_box_data_type(DataType raw) {
    final ptr = wire.cst_new_box_data_type();
    cst_api_fill_to_wire_data_type(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_cst_expr> cst_encode_box_expr(Expr raw) {
    final ptr = wire.cst_new_box_expr();
    cst_api_fill_to_wire_expr(raw, ptr.ref);
    return ptr;
  }

  @protected
  int cst_encode_i_64(int raw) {
    return raw.toInt();
  }

  @protected
  ffi.Pointer<wire_cst_list_Chrono_Duration> cst_encode_list_Chrono_Duration(
      List<Duration> raw) {
    final ans = wire.cst_new_list_Chrono_Duration(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_Chrono_Duration(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_list_String(List<String> raw) {
    final ans = wire.cst_new_list_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_bool> cst_encode_list_bool(List<bool> raw) {
    final ans = wire.cst_new_list_bool(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_bool(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_data_type> cst_encode_list_data_type(
      List<DataType> raw) {
    final ans = wire.cst_new_list_data_type(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_data_type(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_excluded> cst_encode_list_excluded(
      List<Excluded> raw) {
    final ans = wire.cst_new_list_excluded(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_excluded(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_expr> cst_encode_list_expr(List<Expr> raw) {
    final ans = wire.cst_new_list_expr(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_expr(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_field> cst_encode_list_field(List<Field> raw) {
    final ans = wire.cst_new_list_field(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_field(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_String> cst_encode_list_opt_String(
      List<String?> raw) {
    final ans = wire.cst_new_list_opt_String(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_String(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_Chrono_Duration>
      cst_encode_list_opt_box_autoadd_Chrono_Duration(List<Duration?> raw) {
    final ans = wire.cst_new_list_opt_box_autoadd_Chrono_Duration(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_Chrono_Duration(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_f_64>
      cst_encode_list_opt_box_autoadd_f_64(List<double?> raw) {
    final ans = wire.cst_new_list_opt_box_autoadd_f_64(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_f_64(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_opt_box_autoadd_i_64>
      cst_encode_list_opt_box_autoadd_i_64(List<int?> raw) {
    final ans = wire.cst_new_list_opt_box_autoadd_i_64(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      ans.ref.ptr[i] = cst_encode_opt_box_autoadd_i_64(raw[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64_strict> cst_encode_list_prim_f_64_strict(
      Float64List raw) {
    final ans = wire.cst_new_list_prim_f_64_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_64_strict> cst_encode_list_prim_i_64_strict(
      Int64List raw) {
    final ans = wire.cst_new_list_prim_i_64_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw.inner);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_32_strict> cst_encode_list_prim_u_32_strict(
      Uint32List raw) {
    final ans = wire.cst_new_list_prim_u_32_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_list_prim_u_8_strict(
      Uint8List raw) {
    final ans = wire.cst_new_list_prim_u_8_strict(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_literals>
      cst_encode_list_record_string_literals(List<(String, Literals)> raw) {
    final ans = wire.cst_new_list_record_string_literals(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_literals(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_string>
      cst_encode_list_record_string_string(List<(String, String)> raw) {
    final ans = wire.cst_new_list_record_string_string(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      cst_api_fill_to_wire_record_string_string(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_encode_opt_String(
      String? raw) {
    return raw == null ? ffi.nullptr : cst_encode_String(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_Chrono_Duration(
      Duration? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_Chrono_Duration(raw);
  }

  @protected
  ffi.Pointer<ffi.Bool> cst_encode_opt_box_autoadd_bool(bool? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_bool(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_closed_window(
      ClosedWindow? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_box_autoadd_closed_window(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_csv_encoding(
      CsvEncoding? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_csv_encoding(raw);
  }

  @protected
  ffi.Pointer<ffi.Double> cst_encode_opt_box_autoadd_f_64(double? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_f_64(raw);
  }

  @protected
  ffi.Pointer<ffi.Int64> cst_encode_opt_box_autoadd_i_64(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_i_64(raw);
  }

  @protected
  ffi.Pointer<wire_cst_null_values> cst_encode_opt_box_autoadd_null_values(
      NullValues? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_null_values(raw);
  }

  @protected
  ffi.Pointer<wire_cst_row_count> cst_encode_opt_box_autoadd_row_count(
      RowCount? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_row_count(raw);
  }

  @protected
  ffi.Pointer<ffi.Int32> cst_encode_opt_box_autoadd_time_unit(TimeUnit? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_time_unit(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint32> cst_encode_opt_box_autoadd_u_32(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_32(raw);
  }

  @protected
  ffi.Pointer<ffi.Uint64> cst_encode_opt_box_autoadd_u_64(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_u_64(raw);
  }

  @protected
  ffi.Pointer<ffi.UintPtr> cst_encode_opt_box_autoadd_usize(int? raw) {
    return raw == null ? ffi.nullptr : cst_encode_box_autoadd_usize(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_String> cst_encode_opt_list_String(
      List<String>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_String(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_data_type> cst_encode_opt_list_data_type(
      List<DataType>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_data_type(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_expr> cst_encode_opt_list_expr(List<Expr>? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_expr(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_f_64_strict>
      cst_encode_opt_list_prim_f_64_strict(Float64List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_f_64_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_i_64_strict>
      cst_encode_opt_list_prim_i_64_strict(Int64List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_i_64_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_prim_u_32_strict>
      cst_encode_opt_list_prim_u_32_strict(Uint32List? raw) {
    return raw == null ? ffi.nullptr : cst_encode_list_prim_u_32_strict(raw);
  }

  @protected
  ffi.Pointer<wire_cst_list_record_string_literals>
      cst_encode_opt_list_record_string_literals(
          List<(String, Literals)>? raw) {
    return raw == null
        ? ffi.nullptr
        : cst_encode_list_record_string_literals(raw);
  }

  @protected
  int cst_encode_u_64(int raw) {
    return raw.toInt();
  }

  @protected
  void cst_api_fill_to_wire_agg_expr(
      AggExpr apiObj, wire_cst_agg_expr wireObj) {
    if (apiObj is AggExpr_Min) {
      var pre_input = cst_encode_box_expr(apiObj.input);
      var pre_propagate_nans = cst_encode_bool(apiObj.propagateNans);
      wireObj.tag = 0;
      wireObj.kind.Min.input = pre_input;
      wireObj.kind.Min.propagate_nans = pre_propagate_nans;
      return;
    }
    if (apiObj is AggExpr_Max) {
      var pre_input = cst_encode_box_expr(apiObj.input);
      var pre_propagate_nans = cst_encode_bool(apiObj.propagateNans);
      wireObj.tag = 1;
      wireObj.kind.Max.input = pre_input;
      wireObj.kind.Max.propagate_nans = pre_propagate_nans;
      return;
    }
    if (apiObj is AggExpr_Median) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.Median.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_NUnique) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.NUnique.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_First) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.First.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_Last) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Last.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_Mean) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 6;
      wireObj.kind.Mean.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_Implode) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 7;
      wireObj.kind.Implode.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_Count) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 8;
      wireObj.kind.Count.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_Quantile) {
      var pre_expr = cst_encode_box_expr(apiObj.expr);
      var pre_quantile = cst_encode_box_expr(apiObj.quantile);
      var pre_interpol = cst_encode_quantile_interpol_options(apiObj.interpol);
      wireObj.tag = 9;
      wireObj.kind.Quantile.expr = pre_expr;
      wireObj.kind.Quantile.quantile = pre_quantile;
      wireObj.kind.Quantile.interpol = pre_interpol;
      return;
    }
    if (apiObj is AggExpr_Sum) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 10;
      wireObj.kind.Sum.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_AggGroups) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 11;
      wireObj.kind.AggGroups.field0 = pre_field0;
      return;
    }
    if (apiObj is AggExpr_Std) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      var pre_field1 = cst_encode_u_8(apiObj.field1);
      wireObj.tag = 12;
      wireObj.kind.Std.field0 = pre_field0;
      wireObj.kind.Std.field1 = pre_field1;
      return;
    }
    if (apiObj is AggExpr_Var) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      var pre_field1 = cst_encode_u_8(apiObj.field1);
      wireObj.tag = 13;
      wireObj.kind.Var.field0 = pre_field0;
      wireObj.kind.Var.field1 = pre_field1;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_agg_expr(
      AggExpr apiObj, ffi.Pointer<wire_cst_agg_expr> wireObj) {
    cst_api_fill_to_wire_agg_expr(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_data_type(
      DataType apiObj, ffi.Pointer<wire_cst_data_type> wireObj) {
    cst_api_fill_to_wire_data_type(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_expr(
      Expr apiObj, ffi.Pointer<wire_cst_expr> wireObj) {
    cst_api_fill_to_wire_expr(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_literal_value(
      LiteralValue apiObj, ffi.Pointer<wire_cst_literal_value> wireObj) {
    cst_api_fill_to_wire_literal_value(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_literals(
      Literals apiObj, ffi.Pointer<wire_cst_literals> wireObj) {
    cst_api_fill_to_wire_literals(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_null_values(
      NullValues apiObj, ffi.Pointer<wire_cst_null_values> wireObj) {
    cst_api_fill_to_wire_null_values(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_row_count(
      RowCount apiObj, ffi.Pointer<wire_cst_row_count> wireObj) {
    cst_api_fill_to_wire_row_count(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_sort_options(
      SortOptions apiObj, ffi.Pointer<wire_cst_sort_options> wireObj) {
    cst_api_fill_to_wire_sort_options(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_autoadd_window_type(
      WindowType apiObj, ffi.Pointer<wire_cst_window_type> wireObj) {
    cst_api_fill_to_wire_window_type(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_data_type(
      DataType apiObj, ffi.Pointer<wire_cst_data_type> wireObj) {
    cst_api_fill_to_wire_data_type(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_box_expr(
      Expr apiObj, ffi.Pointer<wire_cst_expr> wireObj) {
    cst_api_fill_to_wire_expr(apiObj, wireObj.ref);
  }

  @protected
  void cst_api_fill_to_wire_data_type(
      DataType apiObj, wire_cst_data_type wireObj) {
    if (apiObj is DataType_Boolean) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is DataType_Uint8) {
      wireObj.tag = 1;
      return;
    }
    if (apiObj is DataType_Uint16) {
      wireObj.tag = 2;
      return;
    }
    if (apiObj is DataType_Uint32) {
      wireObj.tag = 3;
      return;
    }
    if (apiObj is DataType_Uint64) {
      wireObj.tag = 4;
      return;
    }
    if (apiObj is DataType_Int8) {
      wireObj.tag = 5;
      return;
    }
    if (apiObj is DataType_Int16) {
      wireObj.tag = 6;
      return;
    }
    if (apiObj is DataType_Int32) {
      wireObj.tag = 7;
      return;
    }
    if (apiObj is DataType_Int64) {
      wireObj.tag = 8;
      return;
    }
    if (apiObj is DataType_Float32) {
      wireObj.tag = 9;
      return;
    }
    if (apiObj is DataType_Float64) {
      wireObj.tag = 10;
      return;
    }
    if (apiObj is DataType_Utf8) {
      wireObj.tag = 11;
      return;
    }
    if (apiObj is DataType_Binary) {
      wireObj.tag = 12;
      return;
    }
    if (apiObj is DataType_Date) {
      wireObj.tag = 13;
      return;
    }
    if (apiObj is DataType_Datetime) {
      var pre_field0 = cst_encode_time_unit(apiObj.field0);
      var pre_field1 = cst_encode_opt_String(apiObj.field1);
      wireObj.tag = 14;
      wireObj.kind.Datetime.field0 = pre_field0;
      wireObj.kind.Datetime.field1 = pre_field1;
      return;
    }
    if (apiObj is DataType_Duration) {
      var pre_field0 = cst_encode_time_unit(apiObj.field0);
      wireObj.tag = 15;
      wireObj.kind.Duration.field0 = pre_field0;
      return;
    }
    if (apiObj is DataType_Time) {
      wireObj.tag = 16;
      return;
    }
    if (apiObj is DataType_List) {
      var pre_field0 = cst_encode_box_data_type(apiObj.field0);
      wireObj.tag = 17;
      wireObj.kind.List.field0 = pre_field0;
      return;
    }
    if (apiObj is DataType_Struct) {
      var pre_field0 = cst_encode_list_field(apiObj.field0);
      wireObj.tag = 18;
      wireObj.kind.Struct.field0 = pre_field0;
      return;
    }
    if (apiObj is DataType_Null) {
      wireObj.tag = 19;
      return;
    }
    if (apiObj is DataType_Unknown) {
      wireObj.tag = 20;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_excluded(
      Excluded apiObj, wire_cst_excluded wireObj) {
    if (apiObj is Excluded_Name) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Name.field0 = pre_field0;
      return;
    }
    if (apiObj is Excluded_Dtype) {
      var pre_field0 = cst_encode_box_autoadd_data_type(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Dtype.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_expr(Expr apiObj, wire_cst_expr wireObj) {
    if (apiObj is Expr_Alias) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      var pre_field1 = cst_encode_String(apiObj.field1);
      wireObj.tag = 0;
      wireObj.kind.Alias.field0 = pre_field0;
      wireObj.kind.Alias.field1 = pre_field1;
      return;
    }
    if (apiObj is Expr_Column) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Column.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_Columns) {
      var pre_field0 = cst_encode_list_String(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.Columns.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_DtypeColumn) {
      var pre_field0 = cst_encode_list_data_type(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.DtypeColumn.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_Literal) {
      var pre_field0 = cst_encode_box_autoadd_literal_value(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Literal.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_BinaryExpr) {
      var pre_left = cst_encode_box_expr(apiObj.left);
      var pre_op = cst_encode_operator(apiObj.op);
      var pre_right = cst_encode_box_expr(apiObj.right);
      wireObj.tag = 5;
      wireObj.kind.BinaryExpr.left = pre_left;
      wireObj.kind.BinaryExpr.op = pre_op;
      wireObj.kind.BinaryExpr.right = pre_right;
      return;
    }
    if (apiObj is Expr_Cast) {
      var pre_expr = cst_encode_box_expr(apiObj.expr);
      var pre_data_type = cst_encode_box_autoadd_data_type(apiObj.dataType);
      var pre_strict = cst_encode_bool(apiObj.strict);
      wireObj.tag = 6;
      wireObj.kind.Cast.expr = pre_expr;
      wireObj.kind.Cast.data_type = pre_data_type;
      wireObj.kind.Cast.strict = pre_strict;
      return;
    }
    if (apiObj is Expr_Sort) {
      var pre_expr = cst_encode_box_expr(apiObj.expr);
      var pre_options = cst_encode_box_autoadd_sort_options(apiObj.options);
      wireObj.tag = 7;
      wireObj.kind.Sort.expr = pre_expr;
      wireObj.kind.Sort.options = pre_options;
      return;
    }
    if (apiObj is Expr_Gather) {
      var pre_expr = cst_encode_box_expr(apiObj.expr);
      var pre_idx = cst_encode_box_expr(apiObj.idx);
      var pre_returns_scalar = cst_encode_bool(apiObj.returnsScalar);
      wireObj.tag = 8;
      wireObj.kind.Gather.expr = pre_expr;
      wireObj.kind.Gather.idx = pre_idx;
      wireObj.kind.Gather.returns_scalar = pre_returns_scalar;
      return;
    }
    if (apiObj is Expr_SortBy) {
      var pre_expr = cst_encode_box_expr(apiObj.expr);
      var pre_by = cst_encode_list_expr(apiObj.by);
      var pre_descending = cst_encode_list_bool(apiObj.descending);
      wireObj.tag = 9;
      wireObj.kind.SortBy.expr = pre_expr;
      wireObj.kind.SortBy.by = pre_by;
      wireObj.kind.SortBy.descending = pre_descending;
      return;
    }
    if (apiObj is Expr_Agg) {
      var pre_field0 = cst_encode_box_autoadd_agg_expr(apiObj.field0);
      wireObj.tag = 10;
      wireObj.kind.Agg.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_Ternary) {
      var pre_predicate = cst_encode_box_expr(apiObj.predicate);
      var pre_truthy = cst_encode_box_expr(apiObj.truthy);
      var pre_falsy = cst_encode_box_expr(apiObj.falsy);
      wireObj.tag = 11;
      wireObj.kind.Ternary.predicate = pre_predicate;
      wireObj.kind.Ternary.truthy = pre_truthy;
      wireObj.kind.Ternary.falsy = pre_falsy;
      return;
    }
    if (apiObj is Expr_Explode) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 12;
      wireObj.kind.Explode.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_Filter) {
      var pre_input = cst_encode_box_expr(apiObj.input);
      var pre_by = cst_encode_box_expr(apiObj.by);
      wireObj.tag = 13;
      wireObj.kind.Filter.input = pre_input;
      wireObj.kind.Filter.by = pre_by;
      return;
    }
    if (apiObj is Expr_Wildcard) {
      wireObj.tag = 14;
      return;
    }
    if (apiObj is Expr_Window) {
      var pre_function = cst_encode_box_expr(apiObj.function);
      var pre_partition_by = cst_encode_list_expr(apiObj.partitionBy);
      var pre_options = cst_encode_box_autoadd_window_type(apiObj.options);
      wireObj.tag = 15;
      wireObj.kind.Window.function = pre_function;
      wireObj.kind.Window.partition_by = pre_partition_by;
      wireObj.kind.Window.options = pre_options;
      return;
    }
    if (apiObj is Expr_Slice) {
      var pre_input = cst_encode_box_expr(apiObj.input);
      var pre_offset = cst_encode_box_expr(apiObj.offset);
      var pre_length = cst_encode_box_expr(apiObj.length);
      wireObj.tag = 16;
      wireObj.kind.Slice.input = pre_input;
      wireObj.kind.Slice.offset = pre_offset;
      wireObj.kind.Slice.length = pre_length;
      return;
    }
    if (apiObj is Expr_Exclude) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      var pre_field1 = cst_encode_list_excluded(apiObj.field1);
      wireObj.tag = 17;
      wireObj.kind.Exclude.field0 = pre_field0;
      wireObj.kind.Exclude.field1 = pre_field1;
      return;
    }
    if (apiObj is Expr_KeepName) {
      var pre_field0 = cst_encode_box_expr(apiObj.field0);
      wireObj.tag = 18;
      wireObj.kind.KeepName.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_Count) {
      wireObj.tag = 19;
      return;
    }
    if (apiObj is Expr_Nth) {
      var pre_field0 = cst_encode_i_64(apiObj.field0);
      wireObj.tag = 20;
      wireObj.kind.Nth.field0 = pre_field0;
      return;
    }
    if (apiObj is Expr_Internal) {
      var pre_field0 =
          cst_encode_RustOpaque_AssertUnwindSafePExpr(apiObj.field0);
      wireObj.tag = 21;
      wireObj.kind.Internal.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_field(Field apiObj, wire_cst_field wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.dtype = cst_encode_box_data_type(apiObj.dtype);
  }

  @protected
  void cst_api_fill_to_wire_literal_value(
      LiteralValue apiObj, wire_cst_literal_value wireObj) {
    if (apiObj is LiteralValue_Null) {
      wireObj.tag = 0;
      return;
    }
    if (apiObj is LiteralValue_Boolean) {
      var pre_field0 = cst_encode_bool(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.Boolean.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Utf8) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.Utf8.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Binary) {
      var pre_field0 = cst_encode_list_prim_u_8_strict(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.Binary.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Uint32) {
      var pre_field0 = cst_encode_u_32(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Uint32.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Uint64) {
      var pre_field0 = cst_encode_u_64(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Uint64.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Int32) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 6;
      wireObj.kind.Int32.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Int64) {
      var pre_field0 = cst_encode_i_64(apiObj.field0);
      wireObj.tag = 7;
      wireObj.kind.Int64.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Float32) {
      var pre_field0 = cst_encode_f_32(apiObj.field0);
      wireObj.tag = 8;
      wireObj.kind.Float32.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Float64) {
      var pre_field0 = cst_encode_f_64(apiObj.field0);
      wireObj.tag = 9;
      wireObj.kind.Float64.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Range) {
      var pre_low = cst_encode_i_64(apiObj.low);
      var pre_high = cst_encode_i_64(apiObj.high);
      var pre_data_type = cst_encode_box_autoadd_data_type(apiObj.dataType);
      wireObj.tag = 10;
      wireObj.kind.Range.low = pre_low;
      wireObj.kind.Range.high = pre_high;
      wireObj.kind.Range.data_type = pre_data_type;
      return;
    }
    if (apiObj is LiteralValue_DateTime) {
      var pre_field0 = cst_encode_i_64(apiObj.field0);
      var pre_field1 = cst_encode_time_unit(apiObj.field1);
      var pre_field2 = cst_encode_opt_String(apiObj.field2);
      wireObj.tag = 11;
      wireObj.kind.DateTime.field0 = pre_field0;
      wireObj.kind.DateTime.field1 = pre_field1;
      wireObj.kind.DateTime.field2 = pre_field2;
      return;
    }
    if (apiObj is LiteralValue_Duration) {
      var pre_field0 = cst_encode_i_64(apiObj.field0);
      var pre_field1 = cst_encode_time_unit(apiObj.field1);
      wireObj.tag = 12;
      wireObj.kind.Duration.field0 = pre_field0;
      wireObj.kind.Duration.field1 = pre_field1;
      return;
    }
    if (apiObj is LiteralValue_Series) {
      var pre_field0 =
          cst_encode_RustOpaque_AssertUnwindSafeSpecialEqPSeries(apiObj.field0);
      wireObj.tag = 13;
      wireObj.kind.Series.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Date) {
      var pre_field0 = cst_encode_i_32(apiObj.field0);
      wireObj.tag = 14;
      wireObj.kind.Date.field0 = pre_field0;
      return;
    }
    if (apiObj is LiteralValue_Time) {
      var pre_field0 = cst_encode_i_64(apiObj.field0);
      wireObj.tag = 15;
      wireObj.kind.Time.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_literals(
      Literals apiObj, wire_cst_literals wireObj) {
    if (apiObj is Literals_Int64) {
      var pre_field0 = cst_encode_list_prim_i_64_strict(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Int64.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_NullInt64) {
      var pre_field0 = cst_encode_list_opt_box_autoadd_i_64(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.NullInt64.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_Float64) {
      var pre_field0 = cst_encode_list_prim_f_64_strict(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.Float64.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_NullFloat64) {
      var pre_field0 = cst_encode_list_opt_box_autoadd_f_64(apiObj.field0);
      wireObj.tag = 3;
      wireObj.kind.NullFloat64.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_Boolean) {
      var pre_field0 = cst_encode_list_bool(apiObj.field0);
      wireObj.tag = 4;
      wireObj.kind.Boolean.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_Duration) {
      var pre_field0 = cst_encode_list_Chrono_Duration(apiObj.field0);
      wireObj.tag = 5;
      wireObj.kind.Duration.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_NullDuration) {
      var pre_field0 =
          cst_encode_list_opt_box_autoadd_Chrono_Duration(apiObj.field0);
      wireObj.tag = 6;
      wireObj.kind.NullDuration.field0 = pre_field0;
      return;
    }
    if (apiObj is Literals_StringLike) {
      var pre_field0 = cst_encode_list_String(apiObj.field0);
      var pre_field1 = cst_encode_box_autoadd_data_type(apiObj.field1);
      wireObj.tag = 7;
      wireObj.kind.StringLike.field0 = pre_field0;
      wireObj.kind.StringLike.field1 = pre_field1;
      return;
    }
    if (apiObj is Literals_NullStringLike) {
      var pre_field0 = cst_encode_list_opt_String(apiObj.field0);
      var pre_field1 = cst_encode_box_autoadd_data_type(apiObj.field1);
      wireObj.tag = 8;
      wireObj.kind.NullStringLike.field0 = pre_field0;
      wireObj.kind.NullStringLike.field1 = pre_field1;
      return;
    }
    if (apiObj is Literals_Series) {
      var pre_field0 =
          cst_encode_RustOpaque_AssertUnwindSafePSeries(apiObj.field0);
      wireObj.tag = 9;
      wireObj.kind.Series.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_null_values(
      NullValues apiObj, wire_cst_null_values wireObj) {
    if (apiObj is NullValues_AllColumnsSingle) {
      var pre_field0 = cst_encode_String(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.AllColumnsSingle.field0 = pre_field0;
      return;
    }
    if (apiObj is NullValues_AllColumns) {
      var pre_field0 = cst_encode_list_String(apiObj.field0);
      wireObj.tag = 1;
      wireObj.kind.AllColumns.field0 = pre_field0;
      return;
    }
    if (apiObj is NullValues_Named) {
      var pre_field0 = cst_encode_list_record_string_string(apiObj.field0);
      wireObj.tag = 2;
      wireObj.kind.Named.field0 = pre_field0;
      return;
    }
  }

  @protected
  void cst_api_fill_to_wire_record_string_literals(
      (String, Literals) apiObj, wire_cst_record_string_literals wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    cst_api_fill_to_wire_literals(apiObj.$2, wireObj.field1);
  }

  @protected
  void cst_api_fill_to_wire_record_string_string(
      (String, String) apiObj, wire_cst_record_string_string wireObj) {
    wireObj.field0 = cst_encode_String(apiObj.$1);
    wireObj.field1 = cst_encode_String(apiObj.$2);
  }

  @protected
  void cst_api_fill_to_wire_row_count(
      RowCount apiObj, wire_cst_row_count wireObj) {
    wireObj.name = cst_encode_String(apiObj.name);
    wireObj.offset = cst_encode_u_32(apiObj.offset);
  }

  @protected
  void cst_api_fill_to_wire_sort_options(
      SortOptions apiObj, wire_cst_sort_options wireObj) {
    wireObj.descending = cst_encode_bool(apiObj.descending);
    wireObj.nulls_last = cst_encode_bool(apiObj.nullsLast);
    wireObj.multithreaded = cst_encode_bool(apiObj.multithreaded);
    wireObj.maintain_order = cst_encode_bool(apiObj.maintainOrder);
  }

  @protected
  void cst_api_fill_to_wire_window_type(
      WindowType apiObj, wire_cst_window_type wireObj) {
    if (apiObj is WindowType_Over) {
      var pre_field0 = cst_encode_window_mapping(apiObj.field0);
      wireObj.tag = 0;
      wireObj.kind.Over.field0 = pre_field0;
      return;
    }
  }

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
      DataFrame raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
      LazyFrame raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
      LazyGroupBy raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
      OptionSchema raw);

  @protected
  int cst_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
      Series raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
      DataFrame raw);

  @protected
  int cst_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
      Series raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
      DataFrame raw);

  @protected
  int cst_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
      Series raw);

  @protected
  int cst_encode_RustOpaque_AssertUnwindSafePExpr(PExpr raw);

  @protected
  int cst_encode_RustOpaque_AssertUnwindSafePSeries(PSeries raw);

  @protected
  int cst_encode_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
      SpecialEqPSeries raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
      DataFrame raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
      LazyFrame raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
      LazyGroupBy raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
      OptionSchema raw);

  @protected
  int cst_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
      Series raw);

  @protected
  int cst_encode_ambiguous(Ambiguous raw);

  @protected
  bool cst_encode_bool(bool raw);

  @protected
  int cst_encode_closed_window(ClosedWindow raw);

  @protected
  int cst_encode_csv_encoding(CsvEncoding raw);

  @protected
  double cst_encode_f_32(double raw);

  @protected
  double cst_encode_f_64(double raw);

  @protected
  int cst_encode_i_32(int raw);

  @protected
  int cst_encode_is_sorted(IsSorted raw);

  @protected
  int cst_encode_join_type(JoinType raw);

  @protected
  int cst_encode_operator(Operator raw);

  @protected
  int cst_encode_quantile_interpol_options(QuantileInterpolOptions raw);

  @protected
  int cst_encode_time_unit(TimeUnit raw);

  @protected
  int cst_encode_u_32(int raw);

  @protected
  int cst_encode_u_8(int raw);

  @protected
  int cst_encode_unique_keep_strategy(UniqueKeepStrategy raw);

  @protected
  int cst_encode_usize(int raw);

  @protected
  int cst_encode_window_mapping(WindowMapping raw);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          DataFrame self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
          LazyFrame self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
          LazyGroupBy self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
          OptionSchema self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          Series self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          DataFrame self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_RefMut_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          Series self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          DataFrame self, SseSerializer serializer);

  @protected
  void
      sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          Series self, SseSerializer serializer);

  @protected
  void sse_encode_Chrono_Duration(Duration self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_AssertUnwindSafePExpr(
      PExpr self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_AssertUnwindSafePSeries(
      PSeries self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
      SpecialEqPSeries self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
          DataFrame self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
          LazyFrame self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
          LazyGroupBy self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
          OptionSchema self, SseSerializer serializer);

  @protected
  void
      sse_encode_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
          Series self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_agg_expr(AggExpr self, SseSerializer serializer);

  @protected
  void sse_encode_ambiguous(Ambiguous self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_Chrono_Duration(
      Duration self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_agg_expr(AggExpr self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_bool(bool self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_closed_window(
      ClosedWindow self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_csv_encoding(
      CsvEncoding self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_data_type(
      DataType self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_expr(Expr self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_literal_value(
      LiteralValue self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_literals(Literals self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_null_values(
      NullValues self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_row_count(
      RowCount self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_sort_options(
      SortOptions self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_time_unit(
      TimeUnit self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_window_type(
      WindowType self, SseSerializer serializer);

  @protected
  void sse_encode_box_data_type(DataType self, SseSerializer serializer);

  @protected
  void sse_encode_box_expr(Expr self, SseSerializer serializer);

  @protected
  void sse_encode_closed_window(ClosedWindow self, SseSerializer serializer);

  @protected
  void sse_encode_csv_encoding(CsvEncoding self, SseSerializer serializer);

  @protected
  void sse_encode_data_type(DataType self, SseSerializer serializer);

  @protected
  void sse_encode_excluded(Excluded self, SseSerializer serializer);

  @protected
  void sse_encode_expr(Expr self, SseSerializer serializer);

  @protected
  void sse_encode_f_32(double self, SseSerializer serializer);

  @protected
  void sse_encode_f_64(double self, SseSerializer serializer);

  @protected
  void sse_encode_field(Field self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_i_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_is_sorted(IsSorted self, SseSerializer serializer);

  @protected
  void sse_encode_join_type(JoinType self, SseSerializer serializer);

  @protected
  void sse_encode_list_Chrono_Duration(
      List<Duration> self, SseSerializer serializer);

  @protected
  void sse_encode_list_String(List<String> self, SseSerializer serializer);

  @protected
  void sse_encode_list_bool(List<bool> self, SseSerializer serializer);

  @protected
  void sse_encode_list_data_type(List<DataType> self, SseSerializer serializer);

  @protected
  void sse_encode_list_excluded(List<Excluded> self, SseSerializer serializer);

  @protected
  void sse_encode_list_expr(List<Expr> self, SseSerializer serializer);

  @protected
  void sse_encode_list_field(List<Field> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_String(List<String?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_Chrono_Duration(
      List<Duration?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_f_64(
      List<double?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_opt_box_autoadd_i_64(
      List<int?> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_f_64_strict(
      Float64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_i_64_strict(
      Int64List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_32_strict(
      Uint32List self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(
      Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_literals(
      List<(String, Literals)> self, SseSerializer serializer);

  @protected
  void sse_encode_list_record_string_string(
      List<(String, String)> self, SseSerializer serializer);

  @protected
  void sse_encode_literal_value(LiteralValue self, SseSerializer serializer);

  @protected
  void sse_encode_literals(Literals self, SseSerializer serializer);

  @protected
  void sse_encode_null_values(NullValues self, SseSerializer serializer);

  @protected
  void sse_encode_operator(Operator self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_Chrono_Duration(
      Duration? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_bool(bool? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_closed_window(
      ClosedWindow? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_csv_encoding(
      CsvEncoding? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_f_64(double? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_i_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_null_values(
      NullValues? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_row_count(
      RowCount? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_time_unit(
      TimeUnit? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_32(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_u_64(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_usize(int? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_String(List<String>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_data_type(
      List<DataType>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_expr(List<Expr>? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_f_64_strict(
      Float64List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_i_64_strict(
      Int64List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_prim_u_32_strict(
      Uint32List? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_list_record_string_literals(
      List<(String, Literals)>? self, SseSerializer serializer);

  @protected
  void sse_encode_quantile_interpol_options(
      QuantileInterpolOptions self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_literals(
      (String, Literals) self, SseSerializer serializer);

  @protected
  void sse_encode_record_string_string(
      (String, String) self, SseSerializer serializer);

  @protected
  void sse_encode_row_count(RowCount self, SseSerializer serializer);

  @protected
  void sse_encode_sort_options(SortOptions self, SseSerializer serializer);

  @protected
  void sse_encode_time_unit(TimeUnit self, SseSerializer serializer);

  @protected
  void sse_encode_u_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_64(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unique_keep_strategy(
      UniqueKeepStrategy self, SseSerializer serializer);

  @protected
  void sse_encode_usize(int self, SseSerializer serializer);

  @protected
  void sse_encode_window_mapping(WindowMapping self, SseSerializer serializer);

  @protected
  void sse_encode_window_type(WindowType self, SseSerializer serializer);
}

// Section: wire_class

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names
// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class RustLibWire implements BaseWire {
  factory RustLibWire.fromExternalLibrary(ExternalLibrary lib) =>
      RustLibWire(lib.ffiDynamicLibrary);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  RustLibWire(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  RustLibWire.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  void dart_fn_deliver_output(
    int call_id,
    ffi.Pointer<ffi.Uint8> ptr_,
    int rust_vec_len_,
    int data_len_,
  ) {
    return _dart_fn_deliver_output(
      call_id,
      ptr_,
      rust_vec_len_,
      data_len_,
    );
  }

  late final _dart_fn_deliver_outputPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int32, ffi.Pointer<ffi.Uint8>, ffi.Int32,
              ffi.Int32)>>('frbgen_polars_dart_fn_deliver_output');
  late final _dart_fn_deliver_output = _dart_fn_deliver_outputPtr
      .asFunction<void Function(int, ffi.Pointer<ffi.Uint8>, int, int)>();

  WireSyncRust2DartDco wire_DataFrame_clone(
    int that,
  ) {
    return _wire_DataFrame_clone(
      that,
    );
  }

  late final _wire_DataFrame_clonePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_clone');
  late final _wire_DataFrame_clone =
      _wire_DataFrame_clonePtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_column(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> column,
  ) {
    return _wire_DataFrame_column(
      that,
      column,
    );
  }

  late final _wire_DataFrame_columnPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_DataFrame_column');
  late final _wire_DataFrame_column = _wire_DataFrame_columnPtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_DataFrame_column_at(
    int that,
    int index,
  ) {
    return _wire_DataFrame_column_at(
      that,
      index,
    );
  }

  late final _wire_DataFrame_column_atPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.UintPtr)>>('frbgen_polars_wire_DataFrame_column_at');
  late final _wire_DataFrame_column_at = _wire_DataFrame_column_atPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_DataFrame_column_names(
    int that,
  ) {
    return _wire_DataFrame_column_names(
      that,
    );
  }

  late final _wire_DataFrame_column_namesPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_column_names');
  late final _wire_DataFrame_column_names = _wire_DataFrame_column_namesPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_columns(
    int that,
    ffi.Pointer<wire_cst_list_String> columns,
  ) {
    return _wire_DataFrame_columns(
      that,
      columns,
    );
  }

  late final _wire_DataFrame_columnsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_polars_wire_DataFrame_columns');
  late final _wire_DataFrame_columns = _wire_DataFrame_columnsPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_list_String>)>();

  void wire_DataFrame_describe(
    int port_,
    int that,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> percentiles,
  ) {
    return _wire_DataFrame_describe(
      port_,
      that,
      percentiles,
    );
  }

  late final _wire_DataFrame_describePtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(ffi.Int64, ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>)>>(
      'frbgen_polars_wire_DataFrame_describe');
  late final _wire_DataFrame_describe = _wire_DataFrame_describePtr.asFunction<
      void Function(int, int, ffi.Pointer<wire_cst_list_prim_f_64_strict>)>();

  WireSyncRust2DartDco wire_DataFrame_drop(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> column,
  ) {
    return _wire_DataFrame_drop(
      that,
      column,
    );
  }

  late final _wire_DataFrame_dropPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_DataFrame_drop');
  late final _wire_DataFrame_drop = _wire_DataFrame_dropPtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_DataFrame_drop_in_place(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> column,
  ) {
    return _wire_DataFrame_drop_in_place(
      that,
      column,
    );
  }

  late final _wire_DataFrame_drop_in_placePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_DataFrame_drop_in_place');
  late final _wire_DataFrame_drop_in_place =
      _wire_DataFrame_drop_in_placePtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_DataFrame_dtypes(
    int that,
  ) {
    return _wire_DataFrame_dtypes(
      that,
    );
  }

  late final _wire_DataFrame_dtypesPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_dtypes');
  late final _wire_DataFrame_dtypes = _wire_DataFrame_dtypesPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_dump(
    int that,
  ) {
    return _wire_DataFrame_dump(
      that,
    );
  }

  late final _wire_DataFrame_dumpPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_dump');
  late final _wire_DataFrame_dump =
      _wire_DataFrame_dumpPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_estimated_size(
    int that,
  ) {
    return _wire_DataFrame_estimated_size(
      that,
    );
  }

  late final _wire_DataFrame_estimated_sizePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_estimated_size');
  late final _wire_DataFrame_estimated_size = _wire_DataFrame_estimated_sizePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_get_columns(
    int that,
  ) {
    return _wire_DataFrame_get_columns(
      that,
    );
  }

  late final _wire_DataFrame_get_columnsPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_get_columns');
  late final _wire_DataFrame_get_columns = _wire_DataFrame_get_columnsPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_get_row(
    int that,
    int index,
  ) {
    return _wire_DataFrame_get_row(
      that,
      index,
    );
  }

  late final _wire_DataFrame_get_rowPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.UintPtr)>>('frbgen_polars_wire_DataFrame_get_row');
  late final _wire_DataFrame_get_row = _wire_DataFrame_get_rowPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_DataFrame_head(
    int that,
    ffi.Pointer<ffi.UintPtr> length,
  ) {
    return _wire_DataFrame_head(
      that,
      length,
    );
  }

  late final _wire_DataFrame_headPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Pointer<ffi.UintPtr>)>>('frbgen_polars_wire_DataFrame_head');
  late final _wire_DataFrame_head = _wire_DataFrame_headPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_DataFrame_height(
    int that,
  ) {
    return _wire_DataFrame_height(
      that,
    );
  }

  late final _wire_DataFrame_heightPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_height');
  late final _wire_DataFrame_height = _wire_DataFrame_heightPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_is_empty(
    int that,
  ) {
    return _wire_DataFrame_is_empty(
      that,
    );
  }

  late final _wire_DataFrame_is_emptyPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_is_empty');
  late final _wire_DataFrame_is_empty = _wire_DataFrame_is_emptyPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  void wire_DataFrame_iter(
    int port_,
    int that,
  ) {
    return _wire_DataFrame_iter(
      port_,
      that,
    );
  }

  late final _wire_DataFrame_iterPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_iter');
  late final _wire_DataFrame_iter =
      _wire_DataFrame_iterPtr.asFunction<void Function(int, int)>();

  WireSyncRust2DartDco wire_DataFrame_lazy(
    int that,
    ffi.Pointer<ffi.Bool> projection_pushdown,
    ffi.Pointer<ffi.Bool> predicate_pushdown,
    ffi.Pointer<ffi.Bool> type_coercion,
    ffi.Pointer<ffi.Bool> simplify_expressions,
    ffi.Pointer<ffi.Bool> slice_pushdown,
    ffi.Pointer<ffi.Bool> streaming,
  ) {
    return _wire_DataFrame_lazy(
      that,
      projection_pushdown,
      predicate_pushdown,
      type_coercion,
      simplify_expressions,
      slice_pushdown,
      streaming,
    );
  }

  late final _wire_DataFrame_lazyPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<ffi.Bool>)>>('frbgen_polars_wire_DataFrame_lazy');
  late final _wire_DataFrame_lazy = _wire_DataFrame_lazyPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<ffi.Bool>)>();

  WireSyncRust2DartDco wire_DataFrame_max(
    int that,
  ) {
    return _wire_DataFrame_max(
      that,
    );
  }

  late final _wire_DataFrame_maxPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_max');
  late final _wire_DataFrame_max =
      _wire_DataFrame_maxPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_of_lits(
    ffi.Pointer<wire_cst_list_record_string_literals> series,
  ) {
    return _wire_DataFrame_of_lits(
      series,
    );
  }

  late final _wire_DataFrame_of_litsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_record_string_literals>)>>(
      'frbgen_polars_wire_DataFrame_of_lits');
  late final _wire_DataFrame_of_lits = _wire_DataFrame_of_litsPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_list_record_string_literals>)>();

  WireSyncRust2DartDco wire_DataFrame_reverse(
    int that,
  ) {
    return _wire_DataFrame_reverse(
      that,
    );
  }

  late final _wire_DataFrame_reversePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_reverse');
  late final _wire_DataFrame_reverse = _wire_DataFrame_reversePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_sample(
    int that,
    int n,
    bool with_replacement,
    bool shuffle,
    ffi.Pointer<ffi.Uint64> seed,
  ) {
    return _wire_DataFrame_sample(
      that,
      n,
      with_replacement,
      shuffle,
      seed,
    );
  }

  late final _wire_DataFrame_samplePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.UintPtr,
              ffi.Bool,
              ffi.Bool,
              ffi.Pointer<ffi.Uint64>)>>('frbgen_polars_wire_DataFrame_sample');
  late final _wire_DataFrame_sample = _wire_DataFrame_samplePtr.asFunction<
      WireSyncRust2DartDco Function(
          int, int, bool, bool, ffi.Pointer<ffi.Uint64>)>();

  WireSyncRust2DartDco wire_DataFrame_schema(
    int that,
  ) {
    return _wire_DataFrame_schema(
      that,
    );
  }

  late final _wire_DataFrame_schemaPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_schema');
  late final _wire_DataFrame_schema = _wire_DataFrame_schemaPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_select(
    int that,
    ffi.Pointer<wire_cst_list_String> columns,
  ) {
    return _wire_DataFrame_select(
      that,
      columns,
    );
  }

  late final _wire_DataFrame_selectPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_polars_wire_DataFrame_select');
  late final _wire_DataFrame_select = _wire_DataFrame_selectPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_list_String>)>();

  WireSyncRust2DartDco wire_DataFrame_shape(
    int that,
  ) {
    return _wire_DataFrame_shape(
      that,
    );
  }

  late final _wire_DataFrame_shapePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_shape');
  late final _wire_DataFrame_shape =
      _wire_DataFrame_shapePtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_sort_in_place(
    int that,
    ffi.Pointer<wire_cst_list_String> by_column,
    ffi.Pointer<wire_cst_list_bool> descending,
    bool maintain_order,
  ) {
    return _wire_DataFrame_sort_in_place(
      that,
      by_column,
      descending,
      maintain_order,
    );
  }

  late final _wire_DataFrame_sort_in_placePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_String>,
              ffi.Pointer<wire_cst_list_bool>,
              ffi.Bool)>>('frbgen_polars_wire_DataFrame_sort_in_place');
  late final _wire_DataFrame_sort_in_place =
      _wire_DataFrame_sort_in_placePtr.asFunction<
          WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_list_String>,
              ffi.Pointer<wire_cst_list_bool>, bool)>();

  WireSyncRust2DartDco wire_DataFrame_tail(
    int that,
    ffi.Pointer<ffi.UintPtr> length,
  ) {
    return _wire_DataFrame_tail(
      that,
      length,
    );
  }

  late final _wire_DataFrame_tailPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Pointer<ffi.UintPtr>)>>('frbgen_polars_wire_DataFrame_tail');
  late final _wire_DataFrame_tail = _wire_DataFrame_tailPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_DataFrame_width(
    int that,
  ) {
    return _wire_DataFrame_width(
      that,
    );
  }

  late final _wire_DataFrame_widthPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_DataFrame_width');
  late final _wire_DataFrame_width =
      _wire_DataFrame_widthPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_DataFrame_with_row_count(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> name,
    ffi.Pointer<ffi.Uint32> offset,
  ) {
    return _wire_DataFrame_with_row_count(
      that,
      name,
      offset,
    );
  }

  late final _wire_DataFrame_with_row_countPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_polars_wire_DataFrame_with_row_count');
  late final _wire_DataFrame_with_row_count =
      _wire_DataFrame_with_row_countPtr.asFunction<
          WireSyncRust2DartDco Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Uint32>)>();

  WireSyncRust2DartDco wire_LazyFrame_cache(
    int that,
  ) {
    return _wire_LazyFrame_cache(
      that,
    );
  }

  late final _wire_LazyFrame_cachePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_cache');
  late final _wire_LazyFrame_cache =
      _wire_LazyFrame_cachePtr.asFunction<WireSyncRust2DartDco Function(int)>();

  void wire_LazyFrame_collect(
    int port_,
    int that,
    bool streaming,
  ) {
    return _wire_LazyFrame_collect(
      port_,
      that,
      streaming,
    );
  }

  late final _wire_LazyFrame_collectPtr = _lookup<
          ffi
          .NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr, ffi.Bool)>>(
      'frbgen_polars_wire_LazyFrame_collect');
  late final _wire_LazyFrame_collect =
      _wire_LazyFrame_collectPtr.asFunction<void Function(int, int, bool)>();

  WireSyncRust2DartDco wire_LazyFrame_cross_join(
    int that,
    int other,
  ) {
    return _wire_LazyFrame_cross_join(
      that,
      other,
    );
  }

  late final _wire_LazyFrame_cross_joinPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.UintPtr)>>('frbgen_polars_wire_LazyFrame_cross_join');
  late final _wire_LazyFrame_cross_join = _wire_LazyFrame_cross_joinPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_drop_nulls(
    int that,
    ffi.Pointer<wire_cst_list_expr> subset,
  ) {
    return _wire_LazyFrame_drop_nulls(
      that,
      subset,
    );
  }

  late final _wire_LazyFrame_drop_nullsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_expr>)>>(
      'frbgen_polars_wire_LazyFrame_drop_nulls');
  late final _wire_LazyFrame_drop_nulls =
      _wire_LazyFrame_drop_nullsPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_explode(
    int that,
    ffi.Pointer<wire_cst_list_expr> columns,
  ) {
    return _wire_LazyFrame_explode(
      that,
      columns,
    );
  }

  late final _wire_LazyFrame_explodePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_expr>)>>(
      'frbgen_polars_wire_LazyFrame_explode');
  late final _wire_LazyFrame_explode = _wire_LazyFrame_explodePtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_list_expr>)>();

  void wire_LazyFrame_fetch(
    int port_,
    int that,
    int n_rows,
  ) {
    return _wire_LazyFrame_fetch(
      port_,
      that,
      n_rows,
    );
  }

  late final _wire_LazyFrame_fetchPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(ffi.Int64, ffi.UintPtr,
              ffi.UintPtr)>>('frbgen_polars_wire_LazyFrame_fetch');
  late final _wire_LazyFrame_fetch =
      _wire_LazyFrame_fetchPtr.asFunction<void Function(int, int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_filter(
    int that,
    ffi.Pointer<wire_cst_expr> pred,
  ) {
    return _wire_LazyFrame_filter(
      that,
      pred,
    );
  }

  late final _wire_LazyFrame_filterPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_LazyFrame_filter');
  late final _wire_LazyFrame_filter = _wire_LazyFrame_filterPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_first(
    int that,
  ) {
    return _wire_LazyFrame_first(
      that,
    );
  }

  late final _wire_LazyFrame_firstPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_first');
  late final _wire_LazyFrame_first =
      _wire_LazyFrame_firstPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_group_by(
    int that,
    ffi.Pointer<wire_cst_list_expr> exprs,
    bool maintain_order,
  ) {
    return _wire_LazyFrame_group_by(
      that,
      exprs,
      maintain_order,
    );
  }

  late final _wire_LazyFrame_group_byPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_expr>,
              ffi.Bool)>>('frbgen_polars_wire_LazyFrame_group_by');
  late final _wire_LazyFrame_group_by = _wire_LazyFrame_group_byPtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_list_expr>, bool)>();

  WireSyncRust2DartDco wire_LazyFrame_inner_join(
    int that,
    int other,
    ffi.Pointer<wire_cst_expr> left_on,
    ffi.Pointer<wire_cst_expr> right_on,
  ) {
    return _wire_LazyFrame_inner_join(
      that,
      other,
      left_on,
      right_on,
    );
  }

  late final _wire_LazyFrame_inner_joinPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr,
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_LazyFrame_inner_join');
  late final _wire_LazyFrame_inner_join =
      _wire_LazyFrame_inner_joinPtr.asFunction<
          WireSyncRust2DartDco Function(int, int, ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_join(
    int that,
    int other,
    ffi.Pointer<wire_cst_list_expr> on1,
    ffi.Pointer<wire_cst_list_expr> left_on,
    ffi.Pointer<wire_cst_list_expr> right_on,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> suffix,
    int how,
    bool allow_parallel,
    bool force_parallel,
  ) {
    return _wire_LazyFrame_join(
      that,
      other,
      on1,
      left_on,
      right_on,
      suffix,
      how,
      allow_parallel,
      force_parallel,
    );
  }

  late final _wire_LazyFrame_joinPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_expr>,
              ffi.Pointer<wire_cst_list_expr>,
              ffi.Pointer<wire_cst_list_expr>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Int32,
              ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_LazyFrame_join');
  late final _wire_LazyFrame_join = _wire_LazyFrame_joinPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          int,
          ffi.Pointer<wire_cst_list_expr>,
          ffi.Pointer<wire_cst_list_expr>,
          ffi.Pointer<wire_cst_list_expr>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          int,
          bool,
          bool)>();

  WireSyncRust2DartDco wire_LazyFrame_last(
    int that,
  ) {
    return _wire_LazyFrame_last(
      that,
    );
  }

  late final _wire_LazyFrame_lastPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_last');
  late final _wire_LazyFrame_last =
      _wire_LazyFrame_lastPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_left_join(
    int that,
    int other,
    ffi.Pointer<wire_cst_expr> left_on,
    ffi.Pointer<wire_cst_expr> right_on,
  ) {
    return _wire_LazyFrame_left_join(
      that,
      other,
      left_on,
      right_on,
    );
  }

  late final _wire_LazyFrame_left_joinPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr,
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_LazyFrame_left_join');
  late final _wire_LazyFrame_left_join =
      _wire_LazyFrame_left_joinPtr.asFunction<
          WireSyncRust2DartDco Function(int, int, ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_limit(
    int that,
    int n,
  ) {
    return _wire_LazyFrame_limit(
      that,
      n,
    );
  }

  late final _wire_LazyFrame_limitPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Uint32)>>('frbgen_polars_wire_LazyFrame_limit');
  late final _wire_LazyFrame_limit = _wire_LazyFrame_limitPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_max(
    int that,
  ) {
    return _wire_LazyFrame_max(
      that,
    );
  }

  late final _wire_LazyFrame_maxPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_max');
  late final _wire_LazyFrame_max =
      _wire_LazyFrame_maxPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_mean(
    int that,
  ) {
    return _wire_LazyFrame_mean(
      that,
    );
  }

  late final _wire_LazyFrame_meanPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_mean');
  late final _wire_LazyFrame_mean =
      _wire_LazyFrame_meanPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_median(
    int that,
  ) {
    return _wire_LazyFrame_median(
      that,
    );
  }

  late final _wire_LazyFrame_medianPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_median');
  late final _wire_LazyFrame_median = _wire_LazyFrame_medianPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_melt(
    int that,
    ffi.Pointer<wire_cst_list_String> id_vars,
    ffi.Pointer<wire_cst_list_String> value_vars,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> variable_name,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> value_name,
    bool streamable,
  ) {
    return _wire_LazyFrame_melt(
      that,
      id_vars,
      value_vars,
      variable_name,
      value_name,
      streamable,
    );
  }

  late final _wire_LazyFrame_meltPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_String>,
              ffi.Pointer<wire_cst_list_String>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool)>>('frbgen_polars_wire_LazyFrame_melt');
  late final _wire_LazyFrame_melt = _wire_LazyFrame_meltPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<wire_cst_list_String>,
          ffi.Pointer<wire_cst_list_String>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          bool)>();

  WireSyncRust2DartDco wire_LazyFrame_min(
    int that,
  ) {
    return _wire_LazyFrame_min(
      that,
    );
  }

  late final _wire_LazyFrame_minPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_min');
  late final _wire_LazyFrame_min =
      _wire_LazyFrame_minPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_null_count(
    int that,
  ) {
    return _wire_LazyFrame_null_count(
      that,
    );
  }

  late final _wire_LazyFrame_null_countPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_null_count');
  late final _wire_LazyFrame_null_count = _wire_LazyFrame_null_countPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_outer_join(
    int that,
    int other,
    ffi.Pointer<wire_cst_expr> left_on,
    ffi.Pointer<wire_cst_expr> right_on,
  ) {
    return _wire_LazyFrame_outer_join(
      that,
      other,
      left_on,
      right_on,
    );
  }

  late final _wire_LazyFrame_outer_joinPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr,
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_LazyFrame_outer_join');
  late final _wire_LazyFrame_outer_join =
      _wire_LazyFrame_outer_joinPtr.asFunction<
          WireSyncRust2DartDco Function(int, int, ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_quantile(
    int that,
    ffi.Pointer<wire_cst_expr> quantile,
    int interpol,
  ) {
    return _wire_LazyFrame_quantile(
      that,
      quantile,
      interpol,
    );
  }

  late final _wire_LazyFrame_quantilePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Pointer<wire_cst_expr>,
              ffi.Int32)>>('frbgen_polars_wire_LazyFrame_quantile');
  late final _wire_LazyFrame_quantile = _wire_LazyFrame_quantilePtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_expr>, int)>();

  WireSyncRust2DartDco wire_LazyFrame_reverse(
    int that,
  ) {
    return _wire_LazyFrame_reverse(
      that,
    );
  }

  late final _wire_LazyFrame_reversePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_reverse');
  late final _wire_LazyFrame_reverse = _wire_LazyFrame_reversePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_select(
    int that,
    ffi.Pointer<wire_cst_list_expr> exprs,
  ) {
    return _wire_LazyFrame_select(
      that,
      exprs,
    );
  }

  late final _wire_LazyFrame_selectPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_expr>)>>(
      'frbgen_polars_wire_LazyFrame_select');
  late final _wire_LazyFrame_select = _wire_LazyFrame_selectPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_list_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_slice(
    int that,
    int offset,
    int len,
  ) {
    return _wire_LazyFrame_slice(
      that,
      offset,
      len,
    );
  }

  late final _wire_LazyFrame_slicePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int64,
              ffi.Uint32)>>('frbgen_polars_wire_LazyFrame_slice');
  late final _wire_LazyFrame_slice = _wire_LazyFrame_slicePtr
      .asFunction<WireSyncRust2DartDco Function(int, int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_sort(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by_column,
    bool descending,
    bool nulls_last,
    bool multithreaded,
    bool maintain_order,
  ) {
    return _wire_LazyFrame_sort(
      that,
      by_column,
      descending,
      nulls_last,
      multithreaded,
      maintain_order,
    );
  }

  late final _wire_LazyFrame_sortPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_LazyFrame_sort');
  late final _wire_LazyFrame_sort = _wire_LazyFrame_sortPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          bool,
          bool,
          bool,
          bool)>();

  WireSyncRust2DartDco wire_LazyFrame_std(
    int that,
    int ddof,
  ) {
    return _wire_LazyFrame_std(
      that,
      ddof,
    );
  }

  late final _wire_LazyFrame_stdPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Uint8)>>('frbgen_polars_wire_LazyFrame_std');
  late final _wire_LazyFrame_std = _wire_LazyFrame_stdPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_sum(
    int that,
  ) {
    return _wire_LazyFrame_sum(
      that,
    );
  }

  late final _wire_LazyFrame_sumPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LazyFrame_sum');
  late final _wire_LazyFrame_sum =
      _wire_LazyFrame_sumPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_LazyFrame_tail(
    int that,
    int n,
  ) {
    return _wire_LazyFrame_tail(
      that,
      n,
    );
  }

  late final _wire_LazyFrame_tailPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Uint32)>>('frbgen_polars_wire_LazyFrame_tail');
  late final _wire_LazyFrame_tail = _wire_LazyFrame_tailPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_unique(
    int that,
    ffi.Pointer<wire_cst_list_String> subset,
    int keep_strategy,
  ) {
    return _wire_LazyFrame_unique(
      that,
      subset,
      keep_strategy,
    );
  }

  late final _wire_LazyFrame_uniquePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_String>,
              ffi.Int32)>>('frbgen_polars_wire_LazyFrame_unique');
  late final _wire_LazyFrame_unique = _wire_LazyFrame_uniquePtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_list_String>, int)>();

  WireSyncRust2DartDco wire_LazyFrame_variance(
    int that,
    int ddof,
  ) {
    return _wire_LazyFrame_variance(
      that,
      ddof,
    );
  }

  late final _wire_LazyFrame_variancePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Uint8)>>('frbgen_polars_wire_LazyFrame_variance');
  late final _wire_LazyFrame_variance = _wire_LazyFrame_variancePtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_LazyFrame_with_column(
    int that,
    ffi.Pointer<wire_cst_expr> expr,
  ) {
    return _wire_LazyFrame_with_column(
      that,
      expr,
    );
  }

  late final _wire_LazyFrame_with_columnPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_LazyFrame_with_column');
  late final _wire_LazyFrame_with_column =
      _wire_LazyFrame_with_columnPtr.asFunction<
          WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_with_columns(
    int that,
    ffi.Pointer<wire_cst_list_expr> exprs,
  ) {
    return _wire_LazyFrame_with_columns(
      that,
      exprs,
    );
  }

  late final _wire_LazyFrame_with_columnsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_expr>)>>(
      'frbgen_polars_wire_LazyFrame_with_columns');
  late final _wire_LazyFrame_with_columns =
      _wire_LazyFrame_with_columnsPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_expr>)>();

  WireSyncRust2DartDco wire_LazyFrame_with_row_count(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> name,
    ffi.Pointer<ffi.Uint32> offset,
  ) {
    return _wire_LazyFrame_with_row_count(
      that,
      name,
      offset,
    );
  }

  late final _wire_LazyFrame_with_row_countPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_polars_wire_LazyFrame_with_row_count');
  late final _wire_LazyFrame_with_row_count =
      _wire_LazyFrame_with_row_countPtr.asFunction<
          WireSyncRust2DartDco Function(
              int,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Uint32>)>();

  void wire_read_csv(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> path,
    ffi.Pointer<wire_cst_list_data_type> dtypes_slice,
    ffi.Pointer<ffi.Bool> has_header,
    ffi.Pointer<wire_cst_list_String> columns,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> comment_char,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> eol_char,
    ffi.Pointer<ffi.UintPtr> chunk_size,
    ffi.Pointer<ffi.UintPtr> sample_size,
    ffi.Pointer<wire_cst_row_count> row_count,
    ffi.Pointer<ffi.Int32> encoding,
    ffi.Pointer<ffi.UintPtr> n_rows,
    ffi.Pointer<ffi.UintPtr> n_threads,
    ffi.Pointer<wire_cst_null_values> null_values,
    ffi.Pointer<wire_cst_list_prim_u_32_strict> projection,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> quote_char,
    int skip_rows,
    int skip_rows_after_header,
    bool ignore_errors,
    bool rechunk,
    bool try_parse_dates,
    bool low_memory,
  ) {
    return _wire_read_csv(
      port_,
      path,
      dtypes_slice,
      has_header,
      columns,
      comment_char,
      eol_char,
      chunk_size,
      sample_size,
      row_count,
      encoding,
      n_rows,
      n_threads,
      null_values,
      projection,
      quote_char,
      skip_rows,
      skip_rows_after_header,
      ignore_errors,
      rechunk,
      try_parse_dates,
      low_memory,
    );
  }

  late final _wire_read_csvPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_data_type>,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_list_String>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.UintPtr>,
              ffi.Pointer<ffi.UintPtr>,
              ffi.Pointer<wire_cst_row_count>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.UintPtr>,
              ffi.Pointer<ffi.UintPtr>,
              ffi.Pointer<wire_cst_null_values>,
              ffi.Pointer<wire_cst_list_prim_u_32_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.UintPtr,
              ffi.UintPtr,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_read_csv');
  late final _wire_read_csv = _wire_read_csvPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<wire_cst_list_data_type>,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<wire_cst_list_String>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.UintPtr>,
          ffi.Pointer<ffi.UintPtr>,
          ffi.Pointer<wire_cst_row_count>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.UintPtr>,
          ffi.Pointer<ffi.UintPtr>,
          ffi.Pointer<wire_cst_null_values>,
          ffi.Pointer<wire_cst_list_prim_u_32_strict>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          int,
          int,
          bool,
          bool,
          bool,
          bool)>();

  void wire_read_json(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> path,
    ffi.Pointer<ffi.UintPtr> batch_size,
    ffi.Pointer<wire_cst_list_String> projection,
  ) {
    return _wire_read_json(
      port_,
      path,
      batch_size,
      projection,
    );
  }

  late final _wire_read_jsonPtr = _lookup<
          ffi.NativeFunction<
              ffi.Void Function(
                  ffi.Int64,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.UintPtr>,
                  ffi.Pointer<wire_cst_list_String>)>>(
      'frbgen_polars_wire_read_json');
  late final _wire_read_json = _wire_read_jsonPtr.asFunction<
      void Function(int, ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.UintPtr>, ffi.Pointer<wire_cst_list_String>)>();

  void wire_scan_csv(
    int port_,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> path,
    int dtype_overwrite,
    ffi.Pointer<ffi.Bool> has_header,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> comment_char,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> eol_char,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> quote_char,
    int skip_rows,
    int skip_rows_after_header,
    ffi.Pointer<wire_cst_row_count> row_count,
    ffi.Pointer<ffi.Int32> encoding,
    ffi.Pointer<ffi.UintPtr> n_rows,
    ffi.Pointer<wire_cst_null_values> null_values,
    bool ignore_errors,
    bool rechunk,
    bool try_parse_dates,
    ffi.Pointer<ffi.UintPtr> infer_schema_length,
    bool cache,
  ) {
    return _wire_scan_csv(
      port_,
      path,
      dtype_overwrite,
      has_header,
      comment_char,
      eol_char,
      quote_char,
      skip_rows,
      skip_rows_after_header,
      row_count,
      encoding,
      n_rows,
      null_values,
      ignore_errors,
      rechunk,
      try_parse_dates,
      infer_schema_length,
      cache,
    );
  }

  late final _wire_scan_csvPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Int64,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.UintPtr,
              ffi.Pointer<ffi.Bool>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.UintPtr,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_row_count>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.UintPtr>,
              ffi.Pointer<wire_cst_null_values>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool,
              ffi.Pointer<ffi.UintPtr>,
              ffi.Bool)>>('frbgen_polars_wire_scan_csv');
  late final _wire_scan_csv = _wire_scan_csvPtr.asFunction<
      void Function(
          int,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          int,
          ffi.Pointer<ffi.Bool>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          int,
          int,
          ffi.Pointer<wire_cst_row_count>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.UintPtr>,
          ffi.Pointer<wire_cst_null_values>,
          bool,
          bool,
          bool,
          ffi.Pointer<ffi.UintPtr>,
          bool)>();

  WireSyncRust2DartDco wire_Expr_abs(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_abs(
      that,
    );
  }

  late final _wire_Expr_absPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_abs');
  late final _wire_Expr_abs = _wire_Expr_absPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_all(
    ffi.Pointer<wire_cst_expr> that,
    bool ignore_nulls,
  ) {
    return _wire_Expr_all(
      that,
      ignore_nulls,
    );
  }

  late final _wire_Expr_allPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_all');
  late final _wire_Expr_all = _wire_Expr_allPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_any(
    ffi.Pointer<wire_cst_expr> that,
    bool ignore_nulls,
  ) {
    return _wire_Expr_any(
      that,
      ignore_nulls,
    );
  }

  late final _wire_Expr_anyPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_any');
  late final _wire_Expr_any = _wire_Expr_anyPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_append(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> other,
    bool upcast,
  ) {
    return _wire_Expr_append(
      that,
      other,
      upcast,
    );
  }

  late final _wire_Expr_appendPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_append');
  late final _wire_Expr_append = _wire_Expr_appendPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_arccos(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arccos(
      that,
    );
  }

  late final _wire_Expr_arccosPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arccos');
  late final _wire_Expr_arccos = _wire_Expr_arccosPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arccosh(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arccosh(
      that,
    );
  }

  late final _wire_Expr_arccoshPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arccosh');
  late final _wire_Expr_arccosh = _wire_Expr_arccoshPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arcsin(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arcsin(
      that,
    );
  }

  late final _wire_Expr_arcsinPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arcsin');
  late final _wire_Expr_arcsin = _wire_Expr_arcsinPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arcsinh(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arcsinh(
      that,
    );
  }

  late final _wire_Expr_arcsinhPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arcsinh');
  late final _wire_Expr_arcsinh = _wire_Expr_arcsinhPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arctan(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arctan(
      that,
    );
  }

  late final _wire_Expr_arctanPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arctan');
  late final _wire_Expr_arctan = _wire_Expr_arctanPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arctan2(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> x,
  ) {
    return _wire_Expr_arctan2(
      that,
      x,
    );
  }

  late final _wire_Expr_arctan2Ptr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arctan2');
  late final _wire_Expr_arctan2 = _wire_Expr_arctan2Ptr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arctanh(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arctanh(
      that,
    );
  }

  late final _wire_Expr_arctanhPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arctanh');
  late final _wire_Expr_arctanh = _wire_Expr_arctanhPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arg_max(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arg_max(
      that,
    );
  }

  late final _wire_Expr_arg_maxPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arg_max');
  late final _wire_Expr_arg_max = _wire_Expr_arg_maxPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arg_min(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arg_min(
      that,
    );
  }

  late final _wire_Expr_arg_minPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_arg_min');
  late final _wire_Expr_arg_min = _wire_Expr_arg_minPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_arg_sort(
    ffi.Pointer<wire_cst_expr> that,
    bool descending,
    bool nulls_last,
    bool multithreaded,
    bool maintain_order,
  ) {
    return _wire_Expr_arg_sort(
      that,
      descending,
      nulls_last,
      multithreaded,
      maintain_order,
    );
  }

  late final _wire_Expr_arg_sortPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_Expr_arg_sort');
  late final _wire_Expr_arg_sort = _wire_Expr_arg_sortPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, bool, bool, bool, bool)>();

  WireSyncRust2DartDco wire_Expr_arg_unique(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_arg_unique(
      that,
    );
  }

  late final _wire_Expr_arg_uniquePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_arg_unique');
  late final _wire_Expr_arg_unique = _wire_Expr_arg_uniquePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_backward_fill(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Uint32> limit,
  ) {
    return _wire_Expr_backward_fill(
      that,
      limit,
    );
  }

  late final _wire_Expr_backward_fillPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_polars_wire_Expr_backward_fill');
  late final _wire_Expr_backward_fill = _wire_Expr_backward_fillPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<ffi.Uint32>)>();

  WireSyncRust2DartDco wire_Expr_cbrt(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_cbrt(
      that,
    );
  }

  late final _wire_Expr_cbrtPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_cbrt');
  late final _wire_Expr_cbrt = _wire_Expr_cbrtPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_ceil(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_ceil(
      that,
    );
  }

  late final _wire_Expr_ceilPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_ceil');
  late final _wire_Expr_ceil = _wire_Expr_ceilPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_clip(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> min,
    ffi.Pointer<wire_cst_expr> max,
  ) {
    return _wire_Expr_clip(
      that,
      min,
      max,
    );
  }

  late final _wire_Expr_clipPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_clip');
  late final _wire_Expr_clip = _wire_Expr_clipPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_clip_max(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> max,
  ) {
    return _wire_Expr_clip_max(
      that,
      max,
    );
  }

  late final _wire_Expr_clip_maxPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_clip_max');
  late final _wire_Expr_clip_max = _wire_Expr_clip_maxPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_clip_min(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> min,
  ) {
    return _wire_Expr_clip_min(
      that,
      min,
    );
  }

  late final _wire_Expr_clip_minPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_clip_min');
  late final _wire_Expr_clip_min = _wire_Expr_clip_minPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_cos(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_cos(
      that,
    );
  }

  late final _wire_Expr_cosPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_cos');
  late final _wire_Expr_cos = _wire_Expr_cosPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_cosh(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_cosh(
      that,
    );
  }

  late final _wire_Expr_coshPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_cosh');
  late final _wire_Expr_cosh = _wire_Expr_coshPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_cot(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_cot(
      that,
    );
  }

  late final _wire_Expr_cotPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_cot');
  late final _wire_Expr_cot = _wire_Expr_cotPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_count(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_count(
      that,
    );
  }

  late final _wire_Expr_countPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_count');
  late final _wire_Expr_count = _wire_Expr_countPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_cum_count(
    ffi.Pointer<wire_cst_expr> that,
    bool reverse,
  ) {
    return _wire_Expr_cum_count(
      that,
      reverse,
    );
  }

  late final _wire_Expr_cum_countPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_cum_count');
  late final _wire_Expr_cum_count = _wire_Expr_cum_countPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_cum_max(
    ffi.Pointer<wire_cst_expr> that,
    bool reverse,
  ) {
    return _wire_Expr_cum_max(
      that,
      reverse,
    );
  }

  late final _wire_Expr_cum_maxPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_cum_max');
  late final _wire_Expr_cum_max = _wire_Expr_cum_maxPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_cum_min(
    ffi.Pointer<wire_cst_expr> that,
    bool reverse,
  ) {
    return _wire_Expr_cum_min(
      that,
      reverse,
    );
  }

  late final _wire_Expr_cum_minPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_cum_min');
  late final _wire_Expr_cum_min = _wire_Expr_cum_minPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_cum_prod(
    ffi.Pointer<wire_cst_expr> that,
    bool reverse,
  ) {
    return _wire_Expr_cum_prod(
      that,
      reverse,
    );
  }

  late final _wire_Expr_cum_prodPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_cum_prod');
  late final _wire_Expr_cum_prod = _wire_Expr_cum_prodPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_cum_sum(
    ffi.Pointer<wire_cst_expr> that,
    bool reverse,
  ) {
    return _wire_Expr_cum_sum(
      that,
      reverse,
    );
  }

  late final _wire_Expr_cum_sumPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_cum_sum');
  late final _wire_Expr_cum_sum = _wire_Expr_cum_sumPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_degrees(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_degrees(
      that,
    );
  }

  late final _wire_Expr_degreesPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_degrees');
  late final _wire_Expr_degrees = _wire_Expr_degreesPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_div(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> other,
  ) {
    return _wire_Expr_div(
      that,
      other,
    );
  }

  late final _wire_Expr_divPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_div');
  late final _wire_Expr_div = _wire_Expr_divPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_dot(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> other,
  ) {
    return _wire_Expr_dot(
      that,
      other,
    );
  }

  late final _wire_Expr_dotPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_dot');
  late final _wire_Expr_dot = _wire_Expr_dotPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_drop_nans(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_drop_nans(
      that,
    );
  }

  late final _wire_Expr_drop_nansPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_drop_nans');
  late final _wire_Expr_drop_nans = _wire_Expr_drop_nansPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_drop_nulls(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_drop_nulls(
      that,
    );
  }

  late final _wire_Expr_drop_nullsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_drop_nulls');
  late final _wire_Expr_drop_nulls = _wire_Expr_drop_nullsPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_entropy(
    ffi.Pointer<wire_cst_expr> that,
    double base,
    bool normalize,
  ) {
    return _wire_Expr_entropy(
      that,
      base,
      normalize,
    );
  }

  late final _wire_Expr_entropyPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, ffi.Double,
              ffi.Bool)>>('frbgen_polars_wire_Expr_entropy');
  late final _wire_Expr_entropy = _wire_Expr_entropyPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, double, bool)>();

  WireSyncRust2DartDco wire_Expr_exp(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_exp(
      that,
    );
  }

  late final _wire_Expr_expPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_exp');
  late final _wire_Expr_exp = _wire_Expr_expPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_fill_nan(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> value,
  ) {
    return _wire_Expr_fill_nan(
      that,
      value,
    );
  }

  late final _wire_Expr_fill_nanPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_fill_nan');
  late final _wire_Expr_fill_nan = _wire_Expr_fill_nanPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_fill_null(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> value,
  ) {
    return _wire_Expr_fill_null(
      that,
      value,
    );
  }

  late final _wire_Expr_fill_nullPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_fill_null');
  late final _wire_Expr_fill_null = _wire_Expr_fill_nullPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_floor(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_floor(
      that,
    );
  }

  late final _wire_Expr_floorPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_floor');
  late final _wire_Expr_floor = _wire_Expr_floorPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_forward_fill(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Uint32> limit,
  ) {
    return _wire_Expr_forward_fill(
      that,
      limit,
    );
  }

  late final _wire_Expr_forward_fillPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<ffi.Uint32>)>>(
      'frbgen_polars_wire_Expr_forward_fill');
  late final _wire_Expr_forward_fill = _wire_Expr_forward_fillPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<ffi.Uint32>)>();

  WireSyncRust2DartDco wire_Expr_is_finite(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_is_finite(
      that,
    );
  }

  late final _wire_Expr_is_finitePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_is_finite');
  late final _wire_Expr_is_finite = _wire_Expr_is_finitePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_is_in(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> other,
  ) {
    return _wire_Expr_is_in(
      that,
      other,
    );
  }

  late final _wire_Expr_is_inPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_is_in');
  late final _wire_Expr_is_in = _wire_Expr_is_inPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_is_nan(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_is_nan(
      that,
    );
  }

  late final _wire_Expr_is_nanPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_is_nan');
  late final _wire_Expr_is_nan = _wire_Expr_is_nanPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_is_not_nan(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_is_not_nan(
      that,
    );
  }

  late final _wire_Expr_is_not_nanPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_is_not_nan');
  late final _wire_Expr_is_not_nan = _wire_Expr_is_not_nanPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_is_not_null(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_is_not_null(
      that,
    );
  }

  late final _wire_Expr_is_not_nullPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_is_not_null');
  late final _wire_Expr_is_not_null = _wire_Expr_is_not_nullPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_is_null(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_is_null(
      that,
    );
  }

  late final _wire_Expr_is_nullPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_is_null');
  late final _wire_Expr_is_null = _wire_Expr_is_nullPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_log(
    ffi.Pointer<wire_cst_expr> that,
    double base,
  ) {
    return _wire_Expr_log(
      that,
      base,
    );
  }

  late final _wire_Expr_logPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Double)>>('frbgen_polars_wire_Expr_log');
  late final _wire_Expr_log = _wire_Expr_logPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, double)>();

  WireSyncRust2DartDco wire_Expr_log1p(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_log1p(
      that,
    );
  }

  late final _wire_Expr_log1pPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_log1p');
  late final _wire_Expr_log1p = _wire_Expr_log1pPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_lower_bound(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_lower_bound(
      that,
    );
  }

  late final _wire_Expr_lower_boundPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_lower_bound');
  late final _wire_Expr_lower_bound = _wire_Expr_lower_boundPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_not(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_not(
      that,
    );
  }

  late final _wire_Expr_notPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_not');
  late final _wire_Expr_not = _wire_Expr_notPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_null_count(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_null_count(
      that,
    );
  }

  late final _wire_Expr_null_countPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_null_count');
  late final _wire_Expr_null_count = _wire_Expr_null_countPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_pow(
    ffi.Pointer<wire_cst_expr> that,
    double exponent,
  ) {
    return _wire_Expr_pow(
      that,
      exponent,
    );
  }

  late final _wire_Expr_powPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Double)>>('frbgen_polars_wire_Expr_pow');
  late final _wire_Expr_pow = _wire_Expr_powPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, double)>();

  WireSyncRust2DartDco wire_Expr_product(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_product(
      that,
    );
  }

  late final _wire_Expr_productPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_product');
  late final _wire_Expr_product = _wire_Expr_productPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_radians(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_radians(
      that,
    );
  }

  late final _wire_Expr_radiansPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_radians');
  late final _wire_Expr_radians = _wire_Expr_radiansPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_reshape(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> dims,
  ) {
    return _wire_Expr_reshape(
      that,
      dims,
    );
  }

  late final _wire_Expr_reshapePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>)>>(
      'frbgen_polars_wire_Expr_reshape');
  late final _wire_Expr_reshape = _wire_Expr_reshapePtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_list_prim_i_64_strict>)>();

  WireSyncRust2DartDco wire_Expr_reverse(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_reverse(
      that,
    );
  }

  late final _wire_Expr_reversePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_reverse');
  late final _wire_Expr_reverse = _wire_Expr_reversePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_rolling_max(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_max(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_maxPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              ffi.Bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>>('frbgen_polars_wire_Expr_rolling_max');
  late final _wire_Expr_rolling_max = _wire_Expr_rolling_maxPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_mean(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_mean(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_meanPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              ffi.Bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>>('frbgen_polars_wire_Expr_rolling_mean');
  late final _wire_Expr_rolling_mean = _wire_Expr_rolling_meanPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_median(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_median(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_medianPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Int32>)>>(
      'frbgen_polars_wire_Expr_rolling_median');
  late final _wire_Expr_rolling_median =
      _wire_Expr_rolling_medianPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              int,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_min(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_min(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_minPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              ffi.Bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>>('frbgen_polars_wire_Expr_rolling_min');
  late final _wire_Expr_rolling_min = _wire_Expr_rolling_minPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_quantile(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_quantile(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_quantilePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<ffi.Int32>)>>(
      'frbgen_polars_wire_Expr_rolling_quantile');
  late final _wire_Expr_rolling_quantile =
      _wire_Expr_rolling_quantilePtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              int,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_std(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_std(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_stdPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              ffi.Bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>>('frbgen_polars_wire_Expr_rolling_std');
  late final _wire_Expr_rolling_std = _wire_Expr_rolling_stdPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_sum(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_sum(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_sumPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              ffi.Bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>>('frbgen_polars_wire_Expr_rolling_sum');
  late final _wire_Expr_rolling_sum = _wire_Expr_rolling_sumPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_rolling_var(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
  ) {
    return _wire_Expr_rolling_var(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
    );
  }

  late final _wire_Expr_rolling_varPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int64>,
              ffi.UintPtr,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              ffi.Bool,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<ffi.Int32>)>>('frbgen_polars_wire_Expr_rolling_var');
  late final _wire_Expr_rolling_var = _wire_Expr_rolling_varPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<ffi.Int32>)>();

  WireSyncRust2DartDco wire_Expr_round(
    ffi.Pointer<wire_cst_expr> that,
    int decimals,
  ) {
    return _wire_Expr_round(
      that,
      decimals,
    );
  }

  late final _wire_Expr_roundPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Uint32)>>('frbgen_polars_wire_Expr_round');
  late final _wire_Expr_round = _wire_Expr_roundPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, int)>();

  WireSyncRust2DartDco wire_Expr_round_sig_figs(
    ffi.Pointer<wire_cst_expr> that,
    int digits,
  ) {
    return _wire_Expr_round_sig_figs(
      that,
      digits,
    );
  }

  late final _wire_Expr_round_sig_figsPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Int32)>>('frbgen_polars_wire_Expr_round_sig_figs');
  late final _wire_Expr_round_sig_figs =
      _wire_Expr_round_sig_figsPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, int)>();

  WireSyncRust2DartDco wire_Expr_set_sorted_flag(
    ffi.Pointer<wire_cst_expr> that,
    int sorted,
  ) {
    return _wire_Expr_set_sorted_flag(
      that,
      sorted,
    );
  }

  late final _wire_Expr_set_sorted_flagPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Int32)>>('frbgen_polars_wire_Expr_set_sorted_flag');
  late final _wire_Expr_set_sorted_flag =
      _wire_Expr_set_sorted_flagPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, int)>();

  WireSyncRust2DartDco wire_Expr_shift(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> n,
  ) {
    return _wire_Expr_shift(
      that,
      n,
    );
  }

  late final _wire_Expr_shiftPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_shift');
  late final _wire_Expr_shift = _wire_Expr_shiftPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_shift_and_fill(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> n,
    ffi.Pointer<wire_cst_expr> fill_value,
  ) {
    return _wire_Expr_shift_and_fill(
      that,
      n,
      fill_value,
    );
  }

  late final _wire_Expr_shift_and_fillPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_shift_and_fill');
  late final _wire_Expr_shift_and_fill =
      _wire_Expr_shift_and_fillPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_shrink_dtype(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_shrink_dtype(
      that,
    );
  }

  late final _wire_Expr_shrink_dtypePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_shrink_dtype');
  late final _wire_Expr_shrink_dtype = _wire_Expr_shrink_dtypePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_sin(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_sin(
      that,
    );
  }

  late final _wire_Expr_sinPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_sin');
  late final _wire_Expr_sin = _wire_Expr_sinPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_sinh(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_sinh(
      that,
    );
  }

  late final _wire_Expr_sinhPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_sinh');
  late final _wire_Expr_sinh = _wire_Expr_sinhPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_sqrt(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_sqrt(
      that,
    );
  }

  late final _wire_Expr_sqrtPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_sqrt');
  late final _wire_Expr_sqrt = _wire_Expr_sqrtPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_tan(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_tan(
      that,
    );
  }

  late final _wire_Expr_tanPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_tan');
  late final _wire_Expr_tan = _wire_Expr_tanPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_tanh(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_tanh(
      that,
    );
  }

  late final _wire_Expr_tanhPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_tanh');
  late final _wire_Expr_tanh = _wire_Expr_tanhPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_to_dot(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_to_dot(
      that,
    );
  }

  late final _wire_Expr_to_dotPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_to_dot');
  late final _wire_Expr_to_dot = _wire_Expr_to_dotPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_to_physical(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_to_physical(
      that,
    );
  }

  late final _wire_Expr_to_physicalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_to_physical');
  late final _wire_Expr_to_physical = _wire_Expr_to_physicalPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_unique(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_unique(
      that,
    );
  }

  late final _wire_Expr_uniquePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_unique');
  late final _wire_Expr_unique = _wire_Expr_uniquePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_unique_stable(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_unique_stable(
      that,
    );
  }

  late final _wire_Expr_unique_stablePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_unique_stable');
  late final _wire_Expr_unique_stable = _wire_Expr_unique_stablePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_upper_bound(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_upper_bound(
      that,
    );
  }

  late final _wire_Expr_upper_boundPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_upper_bound');
  late final _wire_Expr_upper_bound = _wire_Expr_upper_boundPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_value_counts(
    ffi.Pointer<wire_cst_expr> that,
    bool sort,
    bool parallel,
  ) {
    return _wire_Expr_value_counts(
      that,
      sort,
      parallel,
    );
  }

  late final _wire_Expr_value_countsPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_Expr_value_counts');
  late final _wire_Expr_value_counts = _wire_Expr_value_countsPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool, bool)>();

  WireSyncRust2DartDco wire_LiteralValue_from_series(
    int series,
  ) {
    return _wire_LiteralValue_from_series(
      series,
    );
  }

  late final _wire_LiteralValue_from_seriesPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_LiteralValue_from_series');
  late final _wire_LiteralValue_from_series = _wire_LiteralValue_from_seriesPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Expr_list_arg_max(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_arg_max(
      that,
    );
  }

  late final _wire_Expr_list_arg_maxPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_arg_max');
  late final _wire_Expr_list_arg_max = _wire_Expr_list_arg_maxPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_arg_min(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_arg_min(
      that,
    );
  }

  late final _wire_Expr_list_arg_minPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_arg_min');
  late final _wire_Expr_list_arg_min = _wire_Expr_list_arg_minPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_contains(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> other,
  ) {
    return _wire_Expr_list_contains(
      that,
      other,
    );
  }

  late final _wire_Expr_list_containsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_contains');
  late final _wire_Expr_list_contains = _wire_Expr_list_containsPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_first(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_first(
      that,
    );
  }

  late final _wire_Expr_list_firstPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_first');
  late final _wire_Expr_list_first = _wire_Expr_list_firstPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_get(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> index,
  ) {
    return _wire_Expr_list_get(
      that,
      index,
    );
  }

  late final _wire_Expr_list_getPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_list_get');
  late final _wire_Expr_list_get = _wire_Expr_list_getPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_head(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> n,
  ) {
    return _wire_Expr_list_head(
      that,
      n,
    );
  }

  late final _wire_Expr_list_headPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_head');
  late final _wire_Expr_list_head = _wire_Expr_list_headPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_join(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> separator,
  ) {
    return _wire_Expr_list_join(
      that,
      separator,
    );
  }

  late final _wire_Expr_list_joinPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_join');
  late final _wire_Expr_list_join = _wire_Expr_list_joinPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_last(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_last(
      that,
    );
  }

  late final _wire_Expr_list_lastPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_last');
  late final _wire_Expr_list_last = _wire_Expr_list_lastPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_len(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_len(
      that,
    );
  }

  late final _wire_Expr_list_lenPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_list_len');
  late final _wire_Expr_list_len = _wire_Expr_list_lenPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_max(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_max(
      that,
    );
  }

  late final _wire_Expr_list_maxPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_list_max');
  late final _wire_Expr_list_max = _wire_Expr_list_maxPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_mean(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_mean(
      that,
    );
  }

  late final _wire_Expr_list_meanPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_mean');
  late final _wire_Expr_list_mean = _wire_Expr_list_meanPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_min(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_min(
      that,
    );
  }

  late final _wire_Expr_list_minPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_list_min');
  late final _wire_Expr_list_min = _wire_Expr_list_minPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_reverse(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_reverse(
      that,
    );
  }

  late final _wire_Expr_list_reversePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_reverse');
  late final _wire_Expr_list_reverse = _wire_Expr_list_reversePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_shift(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> periods,
  ) {
    return _wire_Expr_list_shift(
      that,
      periods,
    );
  }

  late final _wire_Expr_list_shiftPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_shift');
  late final _wire_Expr_list_shift = _wire_Expr_list_shiftPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_slice(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> offset,
    ffi.Pointer<wire_cst_expr> length,
  ) {
    return _wire_Expr_list_slice(
      that,
      offset,
      length,
    );
  }

  late final _wire_Expr_list_slicePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_slice');
  late final _wire_Expr_list_slice = _wire_Expr_list_slicePtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_sum(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_list_sum(
      that,
    );
  }

  late final _wire_Expr_list_sumPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>)>>('frbgen_polars_wire_Expr_list_sum');
  late final _wire_Expr_list_sum = _wire_Expr_list_sumPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_tail(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> n,
  ) {
    return _wire_Expr_list_tail(
      that,
      n,
    );
  }

  late final _wire_Expr_list_tailPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_list_tail');
  late final _wire_Expr_list_tail = _wire_Expr_list_tailPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_list_unique(
    ffi.Pointer<wire_cst_expr> that,
    bool maintain_order,
  ) {
    return _wire_Expr_list_unique(
      that,
      maintain_order,
    );
  }

  late final _wire_Expr_list_uniquePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_list_unique');
  late final _wire_Expr_list_unique = _wire_Expr_list_uniquePtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_LazyGroupBy_agg(
    int that,
    ffi.Pointer<wire_cst_list_expr> exprs,
  ) {
    return _wire_LazyGroupBy_agg(
      that,
      exprs,
    );
  }

  late final _wire_LazyGroupBy_aggPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_expr>)>>(
      'frbgen_polars_wire_LazyGroupBy_agg');
  late final _wire_LazyGroupBy_agg = _wire_LazyGroupBy_aggPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<wire_cst_list_expr>)>();

  WireSyncRust2DartDco wire_LazyGroupBy_head(
    int that,
    ffi.Pointer<ffi.UintPtr> n,
  ) {
    return _wire_LazyGroupBy_head(
      that,
      n,
    );
  }

  late final _wire_LazyGroupBy_headPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_polars_wire_LazyGroupBy_head');
  late final _wire_LazyGroupBy_head = _wire_LazyGroupBy_headPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_LazyGroupBy_tail(
    int that,
    ffi.Pointer<ffi.UintPtr> n,
  ) {
    return _wire_LazyGroupBy_tail(
      that,
      n,
    );
  }

  late final _wire_LazyGroupBy_tailPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<ffi.UintPtr>)>>(
      'frbgen_polars_wire_LazyGroupBy_tail');
  late final _wire_LazyGroupBy_tail = _wire_LazyGroupBy_tailPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_Schema_of(
    ffi.Pointer<wire_cst_list_field> fields,
  ) {
    return _wire_Schema_of(
      fields,
    );
  }

  late final _wire_Schema_ofPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_field>)>>(
      'frbgen_polars_wire_Schema_of');
  late final _wire_Schema_of = _wire_Schema_ofPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_field>)>();

  WireSyncRust2DartDco wire_Series_add_to(
    int that,
    int other,
  ) {
    return _wire_Series_add_to(
      that,
      other,
    );
  }

  late final _wire_Series_add_toPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.UintPtr)>>('frbgen_polars_wire_Series_add_to');
  late final _wire_Series_add_to = _wire_Series_add_toPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_append(
    int that,
    int other,
  ) {
    return _wire_Series_append(
      that,
      other,
    );
  }

  late final _wire_Series_appendPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.UintPtr)>>('frbgen_polars_wire_Series_append');
  late final _wire_Series_append = _wire_Series_appendPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_apply_scalar(
    int that,
    int op,
    double value,
  ) {
    return _wire_Series_apply_scalar(
      that,
      op,
      value,
    );
  }

  late final _wire_Series_apply_scalarPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr, ffi.Int32,
              ffi.Double)>>('frbgen_polars_wire_Series_apply_scalar');
  late final _wire_Series_apply_scalar = _wire_Series_apply_scalarPtr
      .asFunction<WireSyncRust2DartDco Function(int, int, double)>();

  WireSyncRust2DartDco wire_Series_as_doubles(
    int that,
    bool strict,
  ) {
    return _wire_Series_as_doubles(
      that,
      strict,
    );
  }

  late final _wire_Series_as_doublesPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Bool)>>('frbgen_polars_wire_Series_as_doubles');
  late final _wire_Series_as_doubles = _wire_Series_as_doublesPtr
      .asFunction<WireSyncRust2DartDco Function(int, bool)>();

  WireSyncRust2DartDco wire_Series_as_durations(
    int that,
  ) {
    return _wire_Series_as_durations(
      that,
    );
  }

  late final _wire_Series_as_durationsPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_as_durations');
  late final _wire_Series_as_durations = _wire_Series_as_durationsPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_as_ints(
    int that,
    bool strict,
  ) {
    return _wire_Series_as_ints(
      that,
      strict,
    );
  }

  late final _wire_Series_as_intsPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Bool)>>('frbgen_polars_wire_Series_as_ints');
  late final _wire_Series_as_ints = _wire_Series_as_intsPtr
      .asFunction<WireSyncRust2DartDco Function(int, bool)>();

  WireSyncRust2DartDco wire_Series_as_local_datetime(
    int that,
  ) {
    return _wire_Series_as_local_datetime(
      that,
    );
  }

  late final _wire_Series_as_local_datetimePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_as_local_datetime');
  late final _wire_Series_as_local_datetime = _wire_Series_as_local_datetimePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_as_naive_datetime(
    int that,
  ) {
    return _wire_Series_as_naive_datetime(
      that,
    );
  }

  late final _wire_Series_as_naive_datetimePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_as_naive_datetime');
  late final _wire_Series_as_naive_datetime = _wire_Series_as_naive_datetimePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_as_strings(
    int that,
  ) {
    return _wire_Series_as_strings(
      that,
    );
  }

  late final _wire_Series_as_stringsPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_as_strings');
  late final _wire_Series_as_strings = _wire_Series_as_stringsPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_as_utc_datetime(
    int that,
  ) {
    return _wire_Series_as_utc_datetime(
      that,
    );
  }

  late final _wire_Series_as_utc_datetimePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_as_utc_datetime');
  late final _wire_Series_as_utc_datetime = _wire_Series_as_utc_datetimePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_cast(
    int that,
    ffi.Pointer<wire_cst_data_type> dtype,
    bool strict,
  ) {
    return _wire_Series_cast(
      that,
      dtype,
      strict,
    );
  }

  late final _wire_Series_castPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr,
              ffi.Pointer<wire_cst_data_type>,
              ffi.Bool)>>('frbgen_polars_wire_Series_cast');
  late final _wire_Series_cast = _wire_Series_castPtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_data_type>, bool)>();

  WireSyncRust2DartDco wire_Series_divide(
    int that,
    int other,
  ) {
    return _wire_Series_divide(
      that,
      other,
    );
  }

  late final _wire_Series_dividePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.UintPtr)>>('frbgen_polars_wire_Series_divide');
  late final _wire_Series_divide = _wire_Series_dividePtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_dump(
    int that,
  ) {
    return _wire_Series_dump(
      that,
    );
  }

  late final _wire_Series_dumpPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_dump');
  late final _wire_Series_dump =
      _wire_Series_dumpPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_equal(
    int that,
    int other,
    bool ignore_null,
  ) {
    return _wire_Series_equal(
      that,
      other,
      ignore_null,
    );
  }

  late final _wire_Series_equalPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr, ffi.UintPtr,
              ffi.Bool)>>('frbgen_polars_wire_Series_equal');
  late final _wire_Series_equal = _wire_Series_equalPtr
      .asFunction<WireSyncRust2DartDco Function(int, int, bool)>();

  WireSyncRust2DartDco wire_Series_estimated_size(
    int that,
  ) {
    return _wire_Series_estimated_size(
      that,
    );
  }

  late final _wire_Series_estimated_sizePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_estimated_size');
  late final _wire_Series_estimated_size = _wire_Series_estimated_sizePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_explode(
    int that,
  ) {
    return _wire_Series_explode(
      that,
    );
  }

  late final _wire_Series_explodePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_explode');
  late final _wire_Series_explode =
      _wire_Series_explodePtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_explode_by_offsets(
    int that,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> offsets,
  ) {
    return _wire_Series_explode_by_offsets(
      that,
      offsets,
    );
  }

  late final _wire_Series_explode_by_offsetsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>>(
      'frbgen_polars_wire_Series_explode_by_offsets');
  late final _wire_Series_explode_by_offsets =
      _wire_Series_explode_by_offsetsPtr.asFunction<
          WireSyncRust2DartDco Function(
              int, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>();

  WireSyncRust2DartDco wire_Series_get(
    int that,
    int index,
  ) {
    return _wire_Series_get(
      that,
      index,
    );
  }

  late final _wire_Series_getPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.UintPtr)>>('frbgen_polars_wire_Series_get');
  late final _wire_Series_get =
      _wire_Series_getPtr.asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_get_string(
    int that,
    int index,
  ) {
    return _wire_Series_get_string(
      that,
      index,
    );
  }

  late final _wire_Series_get_stringPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.UintPtr)>>('frbgen_polars_wire_Series_get_string');
  late final _wire_Series_get_string = _wire_Series_get_stringPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_head(
    int that,
    ffi.Pointer<ffi.UintPtr> length,
  ) {
    return _wire_Series_head(
      that,
      length,
    );
  }

  late final _wire_Series_headPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Pointer<ffi.UintPtr>)>>('frbgen_polars_wire_Series_head');
  late final _wire_Series_head = _wire_Series_headPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_Series_into_frame(
    int that,
  ) {
    return _wire_Series_into_frame(
      that,
    );
  }

  late final _wire_Series_into_framePtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_into_frame');
  late final _wire_Series_into_frame = _wire_Series_into_framePtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_into_literal(
    int that,
  ) {
    return _wire_Series_into_literal(
      that,
    );
  }

  late final _wire_Series_into_literalPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_into_literal');
  late final _wire_Series_into_literal = _wire_Series_into_literalPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_into_literals(
    int that,
  ) {
    return _wire_Series_into_literals(
      that,
    );
  }

  late final _wire_Series_into_literalsPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_into_literals');
  late final _wire_Series_into_literals = _wire_Series_into_literalsPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_is_bool(
    int that,
  ) {
    return _wire_Series_is_bool(
      that,
    );
  }

  late final _wire_Series_is_boolPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_is_bool');
  late final _wire_Series_is_bool =
      _wire_Series_is_boolPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_is_numeric(
    int that,
  ) {
    return _wire_Series_is_numeric(
      that,
    );
  }

  late final _wire_Series_is_numericPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_is_numeric');
  late final _wire_Series_is_numeric = _wire_Series_is_numericPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_is_temporal(
    int that,
  ) {
    return _wire_Series_is_temporal(
      that,
    );
  }

  late final _wire_Series_is_temporalPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_is_temporal');
  late final _wire_Series_is_temporal = _wire_Series_is_temporalPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_is_utf8(
    int that,
  ) {
    return _wire_Series_is_utf8(
      that,
    );
  }

  late final _wire_Series_is_utf8Ptr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_is_utf8');
  late final _wire_Series_is_utf8 =
      _wire_Series_is_utf8Ptr.asFunction<WireSyncRust2DartDco Function(int)>();

  void wire_Series_iter(
    int port_,
    int that,
  ) {
    return _wire_Series_iter(
      port_,
      that,
    );
  }

  late final _wire_Series_iterPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_iter');
  late final _wire_Series_iter =
      _wire_Series_iterPtr.asFunction<void Function(int, int)>();

  WireSyncRust2DartDco wire_Series_max(
    int that,
  ) {
    return _wire_Series_max(
      that,
    );
  }

  late final _wire_Series_maxPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_max');
  late final _wire_Series_max =
      _wire_Series_maxPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_mean(
    int that,
  ) {
    return _wire_Series_mean(
      that,
    );
  }

  late final _wire_Series_meanPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_mean');
  late final _wire_Series_mean =
      _wire_Series_meanPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_mean_as_series(
    int that,
  ) {
    return _wire_Series_mean_as_series(
      that,
    );
  }

  late final _wire_Series_mean_as_seriesPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_mean_as_series');
  late final _wire_Series_mean_as_series = _wire_Series_mean_as_seriesPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_median(
    int that,
  ) {
    return _wire_Series_median(
      that,
    );
  }

  late final _wire_Series_medianPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_median');
  late final _wire_Series_median =
      _wire_Series_medianPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_median_as_series(
    int that,
  ) {
    return _wire_Series_median_as_series(
      that,
    );
  }

  late final _wire_Series_median_as_seriesPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_median_as_series');
  late final _wire_Series_median_as_series = _wire_Series_median_as_seriesPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_min(
    int that,
  ) {
    return _wire_Series_min(
      that,
    );
  }

  late final _wire_Series_minPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_min');
  late final _wire_Series_min =
      _wire_Series_minPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_multiply(
    int that,
    int other,
  ) {
    return _wire_Series_multiply(
      that,
      other,
    );
  }

  late final _wire_Series_multiplyPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.UintPtr)>>('frbgen_polars_wire_Series_multiply');
  late final _wire_Series_multiply = _wire_Series_multiplyPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_of_lits(
    ffi.Pointer<wire_cst_list_prim_u_8_strict> name,
    ffi.Pointer<wire_cst_literals> values,
  ) {
    return _wire_Series_of_lits(
      name,
      values,
    );
  }

  late final _wire_Series_of_litsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>,
                  ffi.Pointer<wire_cst_literals>)>>(
      'frbgen_polars_wire_Series_of_lits');
  late final _wire_Series_of_lits = _wire_Series_of_litsPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          ffi.Pointer<wire_cst_literals>)>();

  WireSyncRust2DartDco wire_Series_product(
    int that,
  ) {
    return _wire_Series_product(
      that,
    );
  }

  late final _wire_Series_productPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_product');
  late final _wire_Series_product =
      _wire_Series_productPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_remainder(
    int that,
    int other,
  ) {
    return _wire_Series_remainder(
      that,
      other,
    );
  }

  late final _wire_Series_remainderPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.UintPtr)>>('frbgen_polars_wire_Series_remainder');
  late final _wire_Series_remainder = _wire_Series_remainderPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_rename(
    int that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> name,
  ) {
    return _wire_Series_rename(
      that,
      name,
    );
  }

  late final _wire_Series_renamePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rename');
  late final _wire_Series_rename = _wire_Series_renamePtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_reshape(
    int that,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> dims,
  ) {
    return _wire_Series_reshape(
      that,
      dims,
    );
  }

  late final _wire_Series_reshapePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>>(
      'frbgen_polars_wire_Series_reshape');
  late final _wire_Series_reshape = _wire_Series_reshapePtr.asFunction<
      WireSyncRust2DartDco Function(
          int, ffi.Pointer<wire_cst_list_prim_i_64_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_max(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_max(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_maxPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_max');
  late final _wire_Series_rolling_max = _wire_Series_rolling_maxPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_i_64_strict>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_mean(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_mean(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_meanPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_mean');
  late final _wire_Series_rolling_mean =
      _wire_Series_rolling_meanPtr.asFunction<
          WireSyncRust2DartDco Function(
              int,
              ffi.Pointer<ffi.Int64>,
              int,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              bool,
              ffi.Pointer<wire_cst_list_prim_i_64_strict>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_median(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_median(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_medianPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_median');
  late final _wire_Series_rolling_median =
      _wire_Series_rolling_medianPtr.asFunction<
          WireSyncRust2DartDco Function(
              int,
              ffi.Pointer<ffi.Int64>,
              int,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              bool,
              ffi.Pointer<wire_cst_list_prim_i_64_strict>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_min(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_min(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_minPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_min');
  late final _wire_Series_rolling_min = _wire_Series_rolling_minPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_i_64_strict>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_quantile(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_quantile(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_quantilePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_quantile');
  late final _wire_Series_rolling_quantile =
      _wire_Series_rolling_quantilePtr.asFunction<
          WireSyncRust2DartDco Function(
              int,
              ffi.Pointer<ffi.Int64>,
              int,
              ffi.Pointer<wire_cst_list_prim_f_64_strict>,
              bool,
              ffi.Pointer<wire_cst_list_prim_i_64_strict>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_std(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_std(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_stdPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_std');
  late final _wire_Series_rolling_std = _wire_Series_rolling_stdPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_i_64_strict>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_sum(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_sum(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_sumPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_sum');
  late final _wire_Series_rolling_sum = _wire_Series_rolling_sumPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_i_64_strict>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_rolling_var(
    int that,
    ffi.Pointer<ffi.Int64> window_size,
    int min_periods,
    ffi.Pointer<wire_cst_list_prim_f_64_strict> weights,
    bool center,
    ffi.Pointer<wire_cst_list_prim_i_64_strict> by,
    ffi.Pointer<ffi.Int32> closed_window,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> timezone,
  ) {
    return _wire_Series_rolling_var(
      that,
      window_size,
      min_periods,
      weights,
      center,
      by,
      closed_window,
      time_unit,
      timezone,
    );
  }

  late final _wire_Series_rolling_varPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.UintPtr,
                  ffi.Pointer<ffi.Int64>,
                  ffi.UintPtr,
                  ffi.Pointer<wire_cst_list_prim_f_64_strict>,
                  ffi.Bool,
                  ffi.Pointer<wire_cst_list_prim_i_64_strict>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<ffi.Int32>,
                  ffi.Pointer<wire_cst_list_prim_u_8_strict>)>>(
      'frbgen_polars_wire_Series_rolling_var');
  late final _wire_Series_rolling_var = _wire_Series_rolling_varPtr.asFunction<
      WireSyncRust2DartDco Function(
          int,
          ffi.Pointer<ffi.Int64>,
          int,
          ffi.Pointer<wire_cst_list_prim_f_64_strict>,
          bool,
          ffi.Pointer<wire_cst_list_prim_i_64_strict>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<ffi.Int32>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>)>();

  WireSyncRust2DartDco wire_Series_shuffle(
    int that,
    ffi.Pointer<ffi.Uint64> seed,
  ) {
    return _wire_Series_shuffle(
      that,
      seed,
    );
  }

  late final _wire_Series_shufflePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Pointer<ffi.Uint64>)>>('frbgen_polars_wire_Series_shuffle');
  late final _wire_Series_shuffle = _wire_Series_shufflePtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.Uint64>)>();

  WireSyncRust2DartDco wire_Series_sort(
    int that,
    bool reverse,
  ) {
    return _wire_Series_sort(
      that,
      reverse,
    );
  }

  late final _wire_Series_sortPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Bool)>>('frbgen_polars_wire_Series_sort');
  late final _wire_Series_sort = _wire_Series_sortPtr
      .asFunction<WireSyncRust2DartDco Function(int, bool)>();

  WireSyncRust2DartDco wire_Series_std_as_series(
    int that,
    int ddof,
  ) {
    return _wire_Series_std_as_series(
      that,
      ddof,
    );
  }

  late final _wire_Series_std_as_seriesPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Uint8)>>('frbgen_polars_wire_Series_std_as_series');
  late final _wire_Series_std_as_series = _wire_Series_std_as_seriesPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_subtract(
    int that,
    int other,
  ) {
    return _wire_Series_subtract(
      that,
      other,
    );
  }

  late final _wire_Series_subtractPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.UintPtr)>>('frbgen_polars_wire_Series_subtract');
  late final _wire_Series_subtract = _wire_Series_subtractPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Series_sum(
    int that,
  ) {
    return _wire_Series_sum(
      that,
    );
  }

  late final _wire_Series_sumPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_sum');
  late final _wire_Series_sum =
      _wire_Series_sumPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_sum_as_series(
    int that,
  ) {
    return _wire_Series_sum_as_series(
      that,
    );
  }

  late final _wire_Series_sum_as_seriesPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_sum_as_series');
  late final _wire_Series_sum_as_series = _wire_Series_sum_as_seriesPtr
      .asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_tail(
    int that,
    ffi.Pointer<ffi.UintPtr> length,
  ) {
    return _wire_Series_tail(
      that,
      length,
    );
  }

  late final _wire_Series_tailPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Pointer<ffi.UintPtr>)>>('frbgen_polars_wire_Series_tail');
  late final _wire_Series_tail = _wire_Series_tailPtr.asFunction<
      WireSyncRust2DartDco Function(int, ffi.Pointer<ffi.UintPtr>)>();

  WireSyncRust2DartDco wire_Series_to_list(
    int that,
  ) {
    return _wire_Series_to_list(
      that,
    );
  }

  late final _wire_Series_to_listPtr =
      _lookup<ffi.NativeFunction<WireSyncRust2DartDco Function(ffi.UintPtr)>>(
          'frbgen_polars_wire_Series_to_list');
  late final _wire_Series_to_list =
      _wire_Series_to_listPtr.asFunction<WireSyncRust2DartDco Function(int)>();

  WireSyncRust2DartDco wire_Series_unique(
    int that,
    bool maintain_order,
  ) {
    return _wire_Series_unique(
      that,
      maintain_order,
    );
  }

  late final _wire_Series_uniquePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.UintPtr, ffi.Bool)>>('frbgen_polars_wire_Series_unique');
  late final _wire_Series_unique = _wire_Series_uniquePtr
      .asFunction<WireSyncRust2DartDco Function(int, bool)>();

  WireSyncRust2DartDco wire_Series_var_as_series(
    int that,
    int ddof,
  ) {
    return _wire_Series_var_as_series(
      that,
      ddof,
    );
  }

  late final _wire_Series_var_as_seriesPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.UintPtr,
              ffi.Uint8)>>('frbgen_polars_wire_Series_var_as_series');
  late final _wire_Series_var_as_series = _wire_Series_var_as_seriesPtr
      .asFunction<WireSyncRust2DartDco Function(int, int)>();

  WireSyncRust2DartDco wire_Expr_str_concat(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> delimiter,
    bool ignore_nulls,
  ) {
    return _wire_Expr_str_concat(
      that,
      delimiter,
      ignore_nulls,
    );
  }

  late final _wire_Expr_str_concatPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_concat');
  late final _wire_Expr_str_concat = _wire_Expr_str_concatPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>, bool)>();

  WireSyncRust2DartDco wire_Expr_str_contains(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
    bool strict,
  ) {
    return _wire_Expr_str_contains(
      that,
      pat,
      strict,
    );
  }

  late final _wire_Expr_str_containsPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_contains');
  late final _wire_Expr_str_contains = _wire_Expr_str_containsPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_str_contains_literal(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
  ) {
    return _wire_Expr_str_contains_literal(
      that,
      pat,
    );
  }

  late final _wire_Expr_str_contains_literalPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_contains_literal');
  late final _wire_Expr_str_contains_literal =
      _wire_Expr_str_contains_literalPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_count_matches(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
    bool literal,
  ) {
    return _wire_Expr_str_count_matches(
      that,
      pat,
      literal,
    );
  }

  late final _wire_Expr_str_count_matchesPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_count_matches');
  late final _wire_Expr_str_count_matches =
      _wire_Expr_str_count_matchesPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_str_ends_with(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
  ) {
    return _wire_Expr_str_ends_with(
      that,
      pat,
    );
  }

  late final _wire_Expr_str_ends_withPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_ends_with');
  late final _wire_Expr_str_ends_with = _wire_Expr_str_ends_withPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_explode(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_str_explode(
      that,
    );
  }

  late final _wire_Expr_str_explodePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_explode');
  late final _wire_Expr_str_explode = _wire_Expr_str_explodePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_extract(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> pat,
    int group_index,
  ) {
    return _wire_Expr_str_extract(
      that,
      pat,
      group_index,
    );
  }

  late final _wire_Expr_str_extractPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.UintPtr)>>('frbgen_polars_wire_Expr_str_extract');
  late final _wire_Expr_str_extract = _wire_Expr_str_extractPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>, int)>();

  WireSyncRust2DartDco wire_Expr_str_extract_all(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
  ) {
    return _wire_Expr_str_extract_all(
      that,
      pat,
    );
  }

  late final _wire_Expr_str_extract_allPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_extract_all');
  late final _wire_Expr_str_extract_all =
      _wire_Expr_str_extract_allPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_len_bytes(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_str_len_bytes(
      that,
    );
  }

  late final _wire_Expr_str_len_bytesPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_len_bytes');
  late final _wire_Expr_str_len_bytes = _wire_Expr_str_len_bytesPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_len_chars(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_str_len_chars(
      that,
    );
  }

  late final _wire_Expr_str_len_charsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_len_chars');
  late final _wire_Expr_str_len_chars = _wire_Expr_str_len_charsPtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_replace(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
    ffi.Pointer<wire_cst_expr> val,
    bool literal,
  ) {
    return _wire_Expr_str_replace(
      that,
      pat,
      val,
      literal,
    );
  }

  late final _wire_Expr_str_replacePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_replace');
  late final _wire_Expr_str_replace = _wire_Expr_str_replacePtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_str_replace_all(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
    ffi.Pointer<wire_cst_expr> val,
    bool literal,
  ) {
    return _wire_Expr_str_replace_all(
      that,
      pat,
      val,
      literal,
    );
  }

  late final _wire_Expr_str_replace_allPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_replace_all');
  late final _wire_Expr_str_replace_all =
      _wire_Expr_str_replace_allPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_str_replace_n(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
    ffi.Pointer<wire_cst_expr> val,
    bool literal,
    int n,
  ) {
    return _wire_Expr_str_replace_n(
      that,
      pat,
      val,
      literal,
      n,
    );
  }

  late final _wire_Expr_str_replace_nPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool,
              ffi.Int64)>>('frbgen_polars_wire_Expr_str_replace_n');
  late final _wire_Expr_str_replace_n = _wire_Expr_str_replace_nPtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool, int)>();

  WireSyncRust2DartDco wire_Expr_str_slice(
    ffi.Pointer<wire_cst_expr> that,
    int start,
    ffi.Pointer<ffi.Uint64> length,
  ) {
    return _wire_Expr_str_slice(
      that,
      start,
      length,
    );
  }

  late final _wire_Expr_str_slicePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, ffi.Int64,
              ffi.Pointer<ffi.Uint64>)>>('frbgen_polars_wire_Expr_str_slice');
  late final _wire_Expr_str_slice = _wire_Expr_str_slicePtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, int, ffi.Pointer<ffi.Uint64>)>();

  WireSyncRust2DartDco wire_Expr_str_split(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> by,
    bool inclusive,
  ) {
    return _wire_Expr_str_split(
      that,
      by,
      inclusive,
    );
  }

  late final _wire_Expr_str_splitPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_split');
  late final _wire_Expr_str_split = _wire_Expr_str_splitPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, bool)>();

  WireSyncRust2DartDco wire_Expr_str_split_exact(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> by,
    int n,
    bool inclusive,
  ) {
    return _wire_Expr_str_split_exact(
      that,
      by,
      n,
      inclusive,
    );
  }

  late final _wire_Expr_str_split_exactPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.UintPtr,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_split_exact');
  late final _wire_Expr_str_split_exact =
      _wire_Expr_str_split_exactPtr.asFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>, int, bool)>();

  WireSyncRust2DartDco wire_Expr_str_splitn(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> by,
    int n,
  ) {
    return _wire_Expr_str_splitn(
      that,
      by,
      n,
    );
  }

  late final _wire_Expr_str_splitnPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_expr>,
              ffi.UintPtr)>>('frbgen_polars_wire_Expr_str_splitn');
  late final _wire_Expr_str_splitn = _wire_Expr_str_splitnPtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>, int)>();

  WireSyncRust2DartDco wire_Expr_str_starts_with(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> pat,
  ) {
    return _wire_Expr_str_starts_with(
      that,
      pat,
    );
  }

  late final _wire_Expr_str_starts_withPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_starts_with');
  late final _wire_Expr_str_starts_with =
      _wire_Expr_str_starts_withPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_strip_chars(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> matches,
  ) {
    return _wire_Expr_str_strip_chars(
      that,
      matches,
    );
  }

  late final _wire_Expr_str_strip_charsPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_strip_chars');
  late final _wire_Expr_str_strip_chars =
      _wire_Expr_str_strip_charsPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_strip_chars_end(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> matches,
  ) {
    return _wire_Expr_str_strip_chars_end(
      that,
      matches,
    );
  }

  late final _wire_Expr_str_strip_chars_endPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_strip_chars_end');
  late final _wire_Expr_str_strip_chars_end =
      _wire_Expr_str_strip_chars_endPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_strip_chars_start(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> matches,
  ) {
    return _wire_Expr_str_strip_chars_start(
      that,
      matches,
    );
  }

  late final _wire_Expr_str_strip_chars_startPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_strip_chars_start');
  late final _wire_Expr_str_strip_chars_start =
      _wire_Expr_str_strip_chars_startPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_strip_prefix(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> prefix,
  ) {
    return _wire_Expr_str_strip_prefix(
      that,
      prefix,
    );
  }

  late final _wire_Expr_str_strip_prefixPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_strip_prefix');
  late final _wire_Expr_str_strip_prefix =
      _wire_Expr_str_strip_prefixPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_strip_suffix(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_expr> suffix,
  ) {
    return _wire_Expr_str_strip_suffix(
      that,
      suffix,
    );
  }

  late final _wire_Expr_str_strip_suffixPtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(
                  ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_strip_suffix');
  late final _wire_Expr_str_strip_suffix =
      _wire_Expr_str_strip_suffixPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_to_date(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> format,
    bool strict,
    bool exact,
    bool cache,
  ) {
    return _wire_Expr_str_to_date(
      that,
      format,
      strict,
      exact,
      cache,
    );
  }

  late final _wire_Expr_str_to_datePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_to_date');
  late final _wire_Expr_str_to_date = _wire_Expr_str_to_datePtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>, bool, bool, bool)>();

  WireSyncRust2DartDco wire_Expr_str_to_datetime(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<ffi.Int32> time_unit,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> time_zone,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> format,
    bool strict,
    bool exact,
    bool cache,
    int ambiguous,
  ) {
    return _wire_Expr_str_to_datetime(
      that,
      time_unit,
      time_zone,
      format,
      strict,
      exact,
      cache,
      ambiguous,
    );
  }

  late final _wire_Expr_str_to_datetimePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool,
              ffi.Int32)>>('frbgen_polars_wire_Expr_str_to_datetime');
  late final _wire_Expr_str_to_datetime =
      _wire_Expr_str_to_datetimePtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<ffi.Int32>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              bool,
              bool,
              bool,
              int)>();

  WireSyncRust2DartDco wire_Expr_str_to_integer(
    ffi.Pointer<wire_cst_expr> that,
    int base,
    bool strict,
  ) {
    return _wire_Expr_str_to_integer(
      that,
      base,
      strict,
    );
  }

  late final _wire_Expr_str_to_integerPtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>, ffi.Uint32,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_to_integer');
  late final _wire_Expr_str_to_integer =
      _wire_Expr_str_to_integerPtr.asFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>, int, bool)>();

  WireSyncRust2DartDco wire_Expr_str_to_lowercase(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_str_to_lowercase(
      that,
    );
  }

  late final _wire_Expr_str_to_lowercasePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_to_lowercase');
  late final _wire_Expr_str_to_lowercase = _wire_Expr_str_to_lowercasePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_str_to_time(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> format,
    bool strict,
    bool exact,
    bool cache,
  ) {
    return _wire_Expr_str_to_time(
      that,
      format,
      strict,
      exact,
      cache,
    );
  }

  late final _wire_Expr_str_to_timePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool)>>('frbgen_polars_wire_Expr_str_to_time');
  late final _wire_Expr_str_to_time = _wire_Expr_str_to_timePtr.asFunction<
      WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>, bool, bool, bool)>();

  WireSyncRust2DartDco wire_Expr_str_to_uppercase(
    ffi.Pointer<wire_cst_expr> that,
  ) {
    return _wire_Expr_str_to_uppercase(
      that,
    );
  }

  late final _wire_Expr_str_to_uppercasePtr = _lookup<
          ffi.NativeFunction<
              WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>>(
      'frbgen_polars_wire_Expr_str_to_uppercase');
  late final _wire_Expr_str_to_uppercase = _wire_Expr_str_to_uppercasePtr
      .asFunction<WireSyncRust2DartDco Function(ffi.Pointer<wire_cst_expr>)>();

  WireSyncRust2DartDco wire_Expr_strptime(
    ffi.Pointer<wire_cst_expr> that,
    ffi.Pointer<wire_cst_data_type> dtype,
    ffi.Pointer<wire_cst_list_prim_u_8_strict> format,
    bool strict,
    bool exact,
    bool cache,
    int ambiguous,
  ) {
    return _wire_Expr_strptime(
      that,
      dtype,
      format,
      strict,
      exact,
      cache,
      ambiguous,
    );
  }

  late final _wire_Expr_strptimePtr = _lookup<
      ffi.NativeFunction<
          WireSyncRust2DartDco Function(
              ffi.Pointer<wire_cst_expr>,
              ffi.Pointer<wire_cst_data_type>,
              ffi.Pointer<wire_cst_list_prim_u_8_strict>,
              ffi.Bool,
              ffi.Bool,
              ffi.Bool,
              ffi.Int32)>>('frbgen_polars_wire_Expr_strptime');
  late final _wire_Expr_strptime = _wire_Expr_strptimePtr.asFunction<
      WireSyncRust2DartDco Function(
          ffi.Pointer<wire_cst_expr>,
          ffi.Pointer<wire_cst_data_type>,
          ffi.Pointer<wire_cst_list_prim_u_8_strict>,
          bool,
          bool,
          bool,
          int)>();

  void rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePExpr(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePExpr(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePExprPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePExpr');
  late final _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePExpr =
      _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePExprPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExpr(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExpr(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExprPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExpr');
  late final _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExpr =
      _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePExprPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePSeries(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePSeries');
  late final _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePSeries =
      _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafePSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeries(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeries');
  late final _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeries =
      _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafePSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries');
  late final _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries =
      _rust_arc_increment_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries');
  late final _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeries =
      _rust_arc_decrement_strong_count_RustOpaque_AssertUnwindSafeSpecialEqPSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFramePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFramePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFramePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFrame =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockDataFramePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFramePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFramePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFramePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFrame =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyFramePtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupByPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupByPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupByPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupBy =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockLazyGroupByPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchemaPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchemaPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchemaPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchema =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockOptionSchemaPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchemaPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchemaPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchemaPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchema =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSchemaPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeries =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
      ptr,
    );
  }

  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries');
  late final _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries =
      _rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  void
      rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries(
      ptr,
    );
  }

  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeriesPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Void>)>>(
          'frbgen_polars_rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries');
  late final _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeries =
      _rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedrust_asyncRwLockVecSeriesPtr
          .asFunction<void Function(ffi.Pointer<ffi.Void>)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_Chrono_Duration(
    int value,
  ) {
    return _cst_new_box_autoadd_Chrono_Duration(
      value,
    );
  }

  late final _cst_new_box_autoadd_Chrono_DurationPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_polars_cst_new_box_autoadd_Chrono_Duration');
  late final _cst_new_box_autoadd_Chrono_Duration =
      _cst_new_box_autoadd_Chrono_DurationPtr
          .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<wire_cst_agg_expr> cst_new_box_autoadd_agg_expr() {
    return _cst_new_box_autoadd_agg_expr();
  }

  late final _cst_new_box_autoadd_agg_exprPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_agg_expr> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_agg_expr');
  late final _cst_new_box_autoadd_agg_expr = _cst_new_box_autoadd_agg_exprPtr
      .asFunction<ffi.Pointer<wire_cst_agg_expr> Function()>();

  ffi.Pointer<ffi.Bool> cst_new_box_autoadd_bool(
    bool value,
  ) {
    return _cst_new_box_autoadd_bool(
      value,
    );
  }

  late final _cst_new_box_autoadd_boolPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Bool> Function(ffi.Bool)>>(
          'frbgen_polars_cst_new_box_autoadd_bool');
  late final _cst_new_box_autoadd_bool = _cst_new_box_autoadd_boolPtr
      .asFunction<ffi.Pointer<ffi.Bool> Function(bool)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_closed_window(
    int value,
  ) {
    return _cst_new_box_autoadd_closed_window(
      value,
    );
  }

  late final _cst_new_box_autoadd_closed_windowPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_polars_cst_new_box_autoadd_closed_window');
  late final _cst_new_box_autoadd_closed_window =
      _cst_new_box_autoadd_closed_windowPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_csv_encoding(
    int value,
  ) {
    return _cst_new_box_autoadd_csv_encoding(
      value,
    );
  }

  late final _cst_new_box_autoadd_csv_encodingPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_polars_cst_new_box_autoadd_csv_encoding');
  late final _cst_new_box_autoadd_csv_encoding =
      _cst_new_box_autoadd_csv_encodingPtr
          .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<wire_cst_data_type> cst_new_box_autoadd_data_type() {
    return _cst_new_box_autoadd_data_type();
  }

  late final _cst_new_box_autoadd_data_typePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_data_type> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_data_type');
  late final _cst_new_box_autoadd_data_type = _cst_new_box_autoadd_data_typePtr
      .asFunction<ffi.Pointer<wire_cst_data_type> Function()>();

  ffi.Pointer<wire_cst_expr> cst_new_box_autoadd_expr() {
    return _cst_new_box_autoadd_expr();
  }

  late final _cst_new_box_autoadd_exprPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_expr> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_expr');
  late final _cst_new_box_autoadd_expr = _cst_new_box_autoadd_exprPtr
      .asFunction<ffi.Pointer<wire_cst_expr> Function()>();

  ffi.Pointer<ffi.Double> cst_new_box_autoadd_f_64(
    double value,
  ) {
    return _cst_new_box_autoadd_f_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_f_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Double> Function(ffi.Double)>>(
          'frbgen_polars_cst_new_box_autoadd_f_64');
  late final _cst_new_box_autoadd_f_64 = _cst_new_box_autoadd_f_64Ptr
      .asFunction<ffi.Pointer<ffi.Double> Function(double)>();

  ffi.Pointer<ffi.Int64> cst_new_box_autoadd_i_64(
    int value,
  ) {
    return _cst_new_box_autoadd_i_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_i_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int64> Function(ffi.Int64)>>(
          'frbgen_polars_cst_new_box_autoadd_i_64');
  late final _cst_new_box_autoadd_i_64 = _cst_new_box_autoadd_i_64Ptr
      .asFunction<ffi.Pointer<ffi.Int64> Function(int)>();

  ffi.Pointer<wire_cst_literal_value> cst_new_box_autoadd_literal_value() {
    return _cst_new_box_autoadd_literal_value();
  }

  late final _cst_new_box_autoadd_literal_valuePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_literal_value> Function()>>(
      'frbgen_polars_cst_new_box_autoadd_literal_value');
  late final _cst_new_box_autoadd_literal_value =
      _cst_new_box_autoadd_literal_valuePtr
          .asFunction<ffi.Pointer<wire_cst_literal_value> Function()>();

  ffi.Pointer<wire_cst_literals> cst_new_box_autoadd_literals() {
    return _cst_new_box_autoadd_literals();
  }

  late final _cst_new_box_autoadd_literalsPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_literals> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_literals');
  late final _cst_new_box_autoadd_literals = _cst_new_box_autoadd_literalsPtr
      .asFunction<ffi.Pointer<wire_cst_literals> Function()>();

  ffi.Pointer<wire_cst_null_values> cst_new_box_autoadd_null_values() {
    return _cst_new_box_autoadd_null_values();
  }

  late final _cst_new_box_autoadd_null_valuesPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_null_values> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_null_values');
  late final _cst_new_box_autoadd_null_values =
      _cst_new_box_autoadd_null_valuesPtr
          .asFunction<ffi.Pointer<wire_cst_null_values> Function()>();

  ffi.Pointer<wire_cst_row_count> cst_new_box_autoadd_row_count() {
    return _cst_new_box_autoadd_row_count();
  }

  late final _cst_new_box_autoadd_row_countPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_row_count> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_row_count');
  late final _cst_new_box_autoadd_row_count = _cst_new_box_autoadd_row_countPtr
      .asFunction<ffi.Pointer<wire_cst_row_count> Function()>();

  ffi.Pointer<wire_cst_sort_options> cst_new_box_autoadd_sort_options() {
    return _cst_new_box_autoadd_sort_options();
  }

  late final _cst_new_box_autoadd_sort_optionsPtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<wire_cst_sort_options> Function()>>(
      'frbgen_polars_cst_new_box_autoadd_sort_options');
  late final _cst_new_box_autoadd_sort_options =
      _cst_new_box_autoadd_sort_optionsPtr
          .asFunction<ffi.Pointer<wire_cst_sort_options> Function()>();

  ffi.Pointer<ffi.Int32> cst_new_box_autoadd_time_unit(
    int value,
  ) {
    return _cst_new_box_autoadd_time_unit(
      value,
    );
  }

  late final _cst_new_box_autoadd_time_unitPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Int32> Function(ffi.Int32)>>(
          'frbgen_polars_cst_new_box_autoadd_time_unit');
  late final _cst_new_box_autoadd_time_unit = _cst_new_box_autoadd_time_unitPtr
      .asFunction<ffi.Pointer<ffi.Int32> Function(int)>();

  ffi.Pointer<ffi.Uint32> cst_new_box_autoadd_u_32(
    int value,
  ) {
    return _cst_new_box_autoadd_u_32(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_32Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint32> Function(ffi.Uint32)>>(
          'frbgen_polars_cst_new_box_autoadd_u_32');
  late final _cst_new_box_autoadd_u_32 = _cst_new_box_autoadd_u_32Ptr
      .asFunction<ffi.Pointer<ffi.Uint32> Function(int)>();

  ffi.Pointer<ffi.Uint64> cst_new_box_autoadd_u_64(
    int value,
  ) {
    return _cst_new_box_autoadd_u_64(
      value,
    );
  }

  late final _cst_new_box_autoadd_u_64Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Uint64> Function(ffi.Uint64)>>(
          'frbgen_polars_cst_new_box_autoadd_u_64');
  late final _cst_new_box_autoadd_u_64 = _cst_new_box_autoadd_u_64Ptr
      .asFunction<ffi.Pointer<ffi.Uint64> Function(int)>();

  ffi.Pointer<ffi.UintPtr> cst_new_box_autoadd_usize(
    int value,
  ) {
    return _cst_new_box_autoadd_usize(
      value,
    );
  }

  late final _cst_new_box_autoadd_usizePtr = _lookup<
          ffi.NativeFunction<ffi.Pointer<ffi.UintPtr> Function(ffi.UintPtr)>>(
      'frbgen_polars_cst_new_box_autoadd_usize');
  late final _cst_new_box_autoadd_usize = _cst_new_box_autoadd_usizePtr
      .asFunction<ffi.Pointer<ffi.UintPtr> Function(int)>();

  ffi.Pointer<wire_cst_window_type> cst_new_box_autoadd_window_type() {
    return _cst_new_box_autoadd_window_type();
  }

  late final _cst_new_box_autoadd_window_typePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_window_type> Function()>>(
          'frbgen_polars_cst_new_box_autoadd_window_type');
  late final _cst_new_box_autoadd_window_type =
      _cst_new_box_autoadd_window_typePtr
          .asFunction<ffi.Pointer<wire_cst_window_type> Function()>();

  ffi.Pointer<wire_cst_data_type> cst_new_box_data_type() {
    return _cst_new_box_data_type();
  }

  late final _cst_new_box_data_typePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_data_type> Function()>>(
          'frbgen_polars_cst_new_box_data_type');
  late final _cst_new_box_data_type = _cst_new_box_data_typePtr
      .asFunction<ffi.Pointer<wire_cst_data_type> Function()>();

  ffi.Pointer<wire_cst_expr> cst_new_box_expr() {
    return _cst_new_box_expr();
  }

  late final _cst_new_box_exprPtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_cst_expr> Function()>>(
          'frbgen_polars_cst_new_box_expr');
  late final _cst_new_box_expr =
      _cst_new_box_exprPtr.asFunction<ffi.Pointer<wire_cst_expr> Function()>();

  ffi.Pointer<wire_cst_list_Chrono_Duration> cst_new_list_Chrono_Duration(
    int len,
  ) {
    return _cst_new_list_Chrono_Duration(
      len,
    );
  }

  late final _cst_new_list_Chrono_DurationPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_Chrono_Duration> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_Chrono_Duration');
  late final _cst_new_list_Chrono_Duration = _cst_new_list_Chrono_DurationPtr
      .asFunction<ffi.Pointer<wire_cst_list_Chrono_Duration> Function(int)>();

  ffi.Pointer<wire_cst_list_String> cst_new_list_String(
    int len,
  ) {
    return _cst_new_list_String(
      len,
    );
  }

  late final _cst_new_list_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_String> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_String');
  late final _cst_new_list_String = _cst_new_list_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_String> Function(int)>();

  ffi.Pointer<wire_cst_list_bool> cst_new_list_bool(
    int len,
  ) {
    return _cst_new_list_bool(
      len,
    );
  }

  late final _cst_new_list_boolPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_list_bool> Function(ffi.Int32)>>(
      'frbgen_polars_cst_new_list_bool');
  late final _cst_new_list_bool = _cst_new_list_boolPtr
      .asFunction<ffi.Pointer<wire_cst_list_bool> Function(int)>();

  ffi.Pointer<wire_cst_list_data_type> cst_new_list_data_type(
    int len,
  ) {
    return _cst_new_list_data_type(
      len,
    );
  }

  late final _cst_new_list_data_typePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_data_type> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_data_type');
  late final _cst_new_list_data_type = _cst_new_list_data_typePtr
      .asFunction<ffi.Pointer<wire_cst_list_data_type> Function(int)>();

  ffi.Pointer<wire_cst_list_excluded> cst_new_list_excluded(
    int len,
  ) {
    return _cst_new_list_excluded(
      len,
    );
  }

  late final _cst_new_list_excludedPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_excluded> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_excluded');
  late final _cst_new_list_excluded = _cst_new_list_excludedPtr
      .asFunction<ffi.Pointer<wire_cst_list_excluded> Function(int)>();

  ffi.Pointer<wire_cst_list_expr> cst_new_list_expr(
    int len,
  ) {
    return _cst_new_list_expr(
      len,
    );
  }

  late final _cst_new_list_exprPtr = _lookup<
          ffi
          .NativeFunction<ffi.Pointer<wire_cst_list_expr> Function(ffi.Int32)>>(
      'frbgen_polars_cst_new_list_expr');
  late final _cst_new_list_expr = _cst_new_list_exprPtr
      .asFunction<ffi.Pointer<wire_cst_list_expr> Function(int)>();

  ffi.Pointer<wire_cst_list_field> cst_new_list_field(
    int len,
  ) {
    return _cst_new_list_field(
      len,
    );
  }

  late final _cst_new_list_fieldPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_field> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_field');
  late final _cst_new_list_field = _cst_new_list_fieldPtr
      .asFunction<ffi.Pointer<wire_cst_list_field> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_String> cst_new_list_opt_String(
    int len,
  ) {
    return _cst_new_list_opt_String(
      len,
    );
  }

  late final _cst_new_list_opt_StringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_opt_String> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_opt_String');
  late final _cst_new_list_opt_String = _cst_new_list_opt_StringPtr
      .asFunction<ffi.Pointer<wire_cst_list_opt_String> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_Chrono_Duration>
      cst_new_list_opt_box_autoadd_Chrono_Duration(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_Chrono_Duration(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_Chrono_DurationPtr = _lookup<
          ffi.NativeFunction<
              ffi.Pointer<wire_cst_list_opt_box_autoadd_Chrono_Duration>
                  Function(ffi.Int32)>>(
      'frbgen_polars_cst_new_list_opt_box_autoadd_Chrono_Duration');
  late final _cst_new_list_opt_box_autoadd_Chrono_Duration =
      _cst_new_list_opt_box_autoadd_Chrono_DurationPtr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_Chrono_Duration> Function(
              int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_f_64>
      cst_new_list_opt_box_autoadd_f_64(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_f_64(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_f_64Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_f_64> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_opt_box_autoadd_f_64');
  late final _cst_new_list_opt_box_autoadd_f_64 =
      _cst_new_list_opt_box_autoadd_f_64Ptr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_f_64> Function(int)>();

  ffi.Pointer<wire_cst_list_opt_box_autoadd_i_64>
      cst_new_list_opt_box_autoadd_i_64(
    int len,
  ) {
    return _cst_new_list_opt_box_autoadd_i_64(
      len,
    );
  }

  late final _cst_new_list_opt_box_autoadd_i_64Ptr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_i_64> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_opt_box_autoadd_i_64');
  late final _cst_new_list_opt_box_autoadd_i_64 =
      _cst_new_list_opt_box_autoadd_i_64Ptr.asFunction<
          ffi.Pointer<wire_cst_list_opt_box_autoadd_i_64> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_f_64_strict> cst_new_list_prim_f_64_strict(
    int len,
  ) {
    return _cst_new_list_prim_f_64_strict(
      len,
    );
  }

  late final _cst_new_list_prim_f_64_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_f_64_strict> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_prim_f_64_strict');
  late final _cst_new_list_prim_f_64_strict = _cst_new_list_prim_f_64_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_f_64_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_i_64_strict> cst_new_list_prim_i_64_strict(
    int len,
  ) {
    return _cst_new_list_prim_i_64_strict(
      len,
    );
  }

  late final _cst_new_list_prim_i_64_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_i_64_strict> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_prim_i_64_strict');
  late final _cst_new_list_prim_i_64_strict = _cst_new_list_prim_i_64_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_i_64_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_32_strict> cst_new_list_prim_u_32_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_32_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_32_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_32_strict> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_prim_u_32_strict');
  late final _cst_new_list_prim_u_32_strict = _cst_new_list_prim_u_32_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_32_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_prim_u_8_strict> cst_new_list_prim_u_8_strict(
    int len,
  ) {
    return _cst_new_list_prim_u_8_strict(
      len,
    );
  }

  late final _cst_new_list_prim_u_8_strictPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_prim_u_8_strict');
  late final _cst_new_list_prim_u_8_strict = _cst_new_list_prim_u_8_strictPtr
      .asFunction<ffi.Pointer<wire_cst_list_prim_u_8_strict> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_literals>
      cst_new_list_record_string_literals(
    int len,
  ) {
    return _cst_new_list_record_string_literals(
      len,
    );
  }

  late final _cst_new_list_record_string_literalsPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_record_string_literals> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_record_string_literals');
  late final _cst_new_list_record_string_literals =
      _cst_new_list_record_string_literalsPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_literals> Function(int)>();

  ffi.Pointer<wire_cst_list_record_string_string>
      cst_new_list_record_string_string(
    int len,
  ) {
    return _cst_new_list_record_string_string(
      len,
    );
  }

  late final _cst_new_list_record_string_stringPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<wire_cst_list_record_string_string> Function(
              ffi.Int32)>>('frbgen_polars_cst_new_list_record_string_string');
  late final _cst_new_list_record_string_string =
      _cst_new_list_record_string_stringPtr.asFunction<
          ffi.Pointer<wire_cst_list_record_string_string> Function(int)>();

  int dummy_method_to_enforce_bundling() {
    return _dummy_method_to_enforce_bundling();
  }

  late final _dummy_method_to_enforce_bundlingPtr =
      _lookup<ffi.NativeFunction<ffi.Int64 Function()>>(
          'dummy_method_to_enforce_bundling');
  late final _dummy_method_to_enforce_bundling =
      _dummy_method_to_enforce_bundlingPtr.asFunction<int Function()>();
}

final class wire_cst_list_prim_u_8_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_f_64_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Double> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_list_prim_i_64_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_Int64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_i_64_strict> field0;
}

final class wire_cst_list_opt_box_autoadd_i_64 extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int64>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_NullInt64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_i_64> field0;
}

final class wire_cst_Literals_Float64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_f_64_strict> field0;
}

final class wire_cst_list_opt_box_autoadd_f_64 extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Double>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_NullFloat64 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_f_64> field0;
}

final class wire_cst_list_bool extends ffi.Struct {
  external ffi.Pointer<ffi.Bool> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_Boolean extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_bool> field0;
}

final class wire_cst_list_Chrono_Duration extends ffi.Struct {
  external ffi.Pointer<ffi.Int64> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_Duration extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_Chrono_Duration> field0;
}

final class wire_cst_list_opt_box_autoadd_Chrono_Duration extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<ffi.Int64>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_NullDuration extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_box_autoadd_Chrono_Duration> field0;
}

final class wire_cst_DataType_Datetime extends ffi.Struct {
  @ffi.Int32()
  external int field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_DataType_Duration extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_DataType_List extends ffi.Struct {
  external ffi.Pointer<wire_cst_data_type> field0;
}

final class wire_cst_data_type extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external DataTypeKind kind;
}

final class DataTypeKind extends ffi.Union {
  external wire_cst_DataType_Datetime Datetime;

  external wire_cst_DataType_Duration Duration;

  external wire_cst_DataType_List List;

  external wire_cst_DataType_Struct Struct;
}

final class wire_cst_DataType_Struct extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_field> field0;
}

final class wire_cst_list_field extends ffi.Struct {
  external ffi.Pointer<wire_cst_field> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_field extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  external ffi.Pointer<wire_cst_data_type> dtype;
}

final class wire_cst_Literals_StringLike extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_String> field0;

  external ffi.Pointer<wire_cst_data_type> field1;
}

final class wire_cst_list_opt_String extends ffi.Struct {
  external ffi.Pointer<ffi.Pointer<wire_cst_list_prim_u_8_strict>> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Literals_NullStringLike extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_opt_String> field0;

  external ffi.Pointer<wire_cst_data_type> field1;
}

final class wire_cst_Literals_Series extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class LiteralsKind extends ffi.Union {
  external wire_cst_Literals_Int64 Int64;

  external wire_cst_Literals_NullInt64 NullInt64;

  external wire_cst_Literals_Float64 Float64;

  external wire_cst_Literals_NullFloat64 NullFloat64;

  external wire_cst_Literals_Boolean Boolean;

  external wire_cst_Literals_Duration Duration;

  external wire_cst_Literals_NullDuration NullDuration;

  external wire_cst_Literals_StringLike StringLike;

  external wire_cst_Literals_NullStringLike NullStringLike;

  external wire_cst_Literals_Series Series;
}

final class wire_cst_literals extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external LiteralsKind kind;
}

final class wire_cst_record_string_literals extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external wire_cst_literals field1;
}

final class wire_cst_list_record_string_literals extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_literals> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Expr_Alias extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_expr extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ExprKind kind;
}

final class ExprKind extends ffi.Union {
  external wire_cst_Expr_Alias Alias;

  external wire_cst_Expr_Column Column;

  external wire_cst_Expr_Columns Columns;

  external wire_cst_Expr_DtypeColumn DtypeColumn;

  external wire_cst_Expr_Literal Literal;

  external wire_cst_Expr_BinaryExpr BinaryExpr;

  external wire_cst_Expr_Cast Cast;

  external wire_cst_Expr_Sort Sort;

  external wire_cst_Expr_Gather Gather;

  external wire_cst_Expr_SortBy SortBy;

  external wire_cst_Expr_Agg Agg;

  external wire_cst_Expr_Ternary Ternary;

  external wire_cst_Expr_Explode Explode;

  external wire_cst_Expr_Filter Filter;

  external wire_cst_Expr_Window Window;

  external wire_cst_Expr_Slice Slice;

  external wire_cst_Expr_Exclude Exclude;

  external wire_cst_Expr_KeepName KeepName;

  external wire_cst_Expr_Nth Nth;

  external wire_cst_Expr_Internal Internal;
}

final class wire_cst_Expr_Column extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_Expr_Columns extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_String> field0;
}

final class wire_cst_Expr_DtypeColumn extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_data_type> field0;
}

final class wire_cst_list_data_type extends ffi.Struct {
  external ffi.Pointer<wire_cst_data_type> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Expr_Literal extends ffi.Struct {
  external ffi.Pointer<wire_cst_literal_value> field0;
}

final class wire_cst_literal_value extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external LiteralValueKind kind;
}

final class LiteralValueKind extends ffi.Union {
  external wire_cst_LiteralValue_Boolean Boolean;

  external wire_cst_LiteralValue_Utf8 Utf8;

  external wire_cst_LiteralValue_Binary Binary;

  external wire_cst_LiteralValue_Uint32 Uint32;

  external wire_cst_LiteralValue_Uint64 Uint64;

  external wire_cst_LiteralValue_Int32 Int32;

  external wire_cst_LiteralValue_Int64 Int64;

  external wire_cst_LiteralValue_Float32 Float32;

  external wire_cst_LiteralValue_Float64 Float64;

  external wire_cst_LiteralValue_Range Range;

  external wire_cst_LiteralValue_DateTime DateTime;

  external wire_cst_LiteralValue_Duration Duration;

  external wire_cst_LiteralValue_Series Series;

  external wire_cst_LiteralValue_Date Date;

  external wire_cst_LiteralValue_Time Time;
}

final class wire_cst_LiteralValue_Boolean extends ffi.Struct {
  @ffi.Bool()
  external bool field0;
}

final class wire_cst_LiteralValue_Utf8 extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_LiteralValue_Binary extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_LiteralValue_Uint32 extends ffi.Struct {
  @ffi.Uint32()
  external int field0;
}

final class wire_cst_LiteralValue_Uint64 extends ffi.Struct {
  @ffi.Uint64()
  external int field0;
}

final class wire_cst_LiteralValue_Int32 extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_LiteralValue_Int64 extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_LiteralValue_Float32 extends ffi.Struct {
  @ffi.Float()
  external double field0;
}

final class wire_cst_LiteralValue_Float64 extends ffi.Struct {
  @ffi.Double()
  external double field0;
}

final class wire_cst_LiteralValue_Range extends ffi.Struct {
  @ffi.Int64()
  external int low;

  @ffi.Int64()
  external int high;

  external ffi.Pointer<wire_cst_data_type> data_type;
}

final class wire_cst_LiteralValue_DateTime extends ffi.Struct {
  @ffi.Int64()
  external int field0;

  @ffi.Int32()
  external int field1;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field2;
}

final class wire_cst_LiteralValue_Duration extends ffi.Struct {
  @ffi.Int64()
  external int field0;

  @ffi.Int32()
  external int field1;
}

final class wire_cst_LiteralValue_Series extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_LiteralValue_Date extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_LiteralValue_Time extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_Expr_BinaryExpr extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> left;

  @ffi.Int32()
  external int op;

  external ffi.Pointer<wire_cst_expr> right;
}

final class wire_cst_Expr_Cast extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> expr;

  external ffi.Pointer<wire_cst_data_type> data_type;

  @ffi.Bool()
  external bool strict;
}

final class wire_cst_Expr_Sort extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> expr;

  external ffi.Pointer<wire_cst_sort_options> options;
}

final class wire_cst_sort_options extends ffi.Struct {
  @ffi.Bool()
  external bool descending;

  @ffi.Bool()
  external bool nulls_last;

  @ffi.Bool()
  external bool multithreaded;

  @ffi.Bool()
  external bool maintain_order;
}

final class wire_cst_Expr_Gather extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> expr;

  external ffi.Pointer<wire_cst_expr> idx;

  @ffi.Bool()
  external bool returns_scalar;
}

final class wire_cst_Expr_SortBy extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> expr;

  external ffi.Pointer<wire_cst_list_expr> by;

  external ffi.Pointer<wire_cst_list_bool> descending;
}

final class wire_cst_list_expr extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_Expr_Agg extends ffi.Struct {
  external ffi.Pointer<wire_cst_agg_expr> field0;
}

final class wire_cst_agg_expr extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external AggExprKind kind;
}

final class AggExprKind extends ffi.Union {
  external wire_cst_AggExpr_Min Min;

  external wire_cst_AggExpr_Max Max;

  external wire_cst_AggExpr_Median Median;

  external wire_cst_AggExpr_NUnique NUnique;

  external wire_cst_AggExpr_First First;

  external wire_cst_AggExpr_Last Last;

  external wire_cst_AggExpr_Mean Mean;

  external wire_cst_AggExpr_Implode Implode;

  external wire_cst_AggExpr_Count Count;

  external wire_cst_AggExpr_Quantile Quantile;

  external wire_cst_AggExpr_Sum Sum;

  external wire_cst_AggExpr_AggGroups AggGroups;

  external wire_cst_AggExpr_Std Std;

  external wire_cst_AggExpr_Var Var;
}

final class wire_cst_AggExpr_Min extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> input;

  @ffi.Bool()
  external bool propagate_nans;
}

final class wire_cst_AggExpr_Max extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> input;

  @ffi.Bool()
  external bool propagate_nans;
}

final class wire_cst_AggExpr_Median extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_NUnique extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_First extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_Last extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_Mean extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_Implode extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_Count extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_Quantile extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> expr;

  external ffi.Pointer<wire_cst_expr> quantile;

  @ffi.Int32()
  external int interpol;
}

final class wire_cst_AggExpr_Sum extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_AggGroups extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_AggExpr_Std extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;

  @ffi.Uint8()
  external int field1;
}

final class wire_cst_AggExpr_Var extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;

  @ffi.Uint8()
  external int field1;
}

final class wire_cst_Expr_Ternary extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> predicate;

  external ffi.Pointer<wire_cst_expr> truthy;

  external ffi.Pointer<wire_cst_expr> falsy;
}

final class wire_cst_Expr_Explode extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_Expr_Filter extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> input;

  external ffi.Pointer<wire_cst_expr> by;
}

final class wire_cst_Expr_Window extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> function;

  external ffi.Pointer<wire_cst_list_expr> partition_by;

  external ffi.Pointer<wire_cst_window_type> options;
}

final class wire_cst_window_type extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external WindowTypeKind kind;
}

final class WindowTypeKind extends ffi.Union {
  external wire_cst_WindowType_Over Over;
}

final class wire_cst_WindowType_Over extends ffi.Struct {
  @ffi.Int32()
  external int field0;
}

final class wire_cst_Expr_Slice extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> input;

  external ffi.Pointer<wire_cst_expr> offset;

  external ffi.Pointer<wire_cst_expr> length;
}

final class wire_cst_Expr_Exclude extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;

  external ffi.Pointer<wire_cst_list_excluded> field1;
}

final class wire_cst_list_excluded extends ffi.Struct {
  external ffi.Pointer<wire_cst_excluded> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_excluded extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external ExcludedKind kind;
}

final class ExcludedKind extends ffi.Union {
  external wire_cst_Excluded_Name Name;

  external wire_cst_Excluded_Dtype Dtype;
}

final class wire_cst_Excluded_Name extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_Excluded_Dtype extends ffi.Struct {
  external ffi.Pointer<wire_cst_data_type> field0;
}

final class wire_cst_Expr_KeepName extends ffi.Struct {
  external ffi.Pointer<wire_cst_expr> field0;
}

final class wire_cst_Expr_Nth extends ffi.Struct {
  @ffi.Int64()
  external int field0;
}

final class wire_cst_Expr_Internal extends ffi.Struct {
  @ffi.UintPtr()
  external int field0;
}

final class wire_cst_row_count extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> name;

  @ffi.Uint32()
  external int offset;
}

final class wire_cst_NullValues_AllColumnsSingle extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;
}

final class wire_cst_NullValues_AllColumns extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_String> field0;
}

final class wire_cst_record_string_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field0;

  external ffi.Pointer<wire_cst_list_prim_u_8_strict> field1;
}

final class wire_cst_list_record_string_string extends ffi.Struct {
  external ffi.Pointer<wire_cst_record_string_string> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_cst_NullValues_Named extends ffi.Struct {
  external ffi.Pointer<wire_cst_list_record_string_string> field0;
}

final class NullValuesKind extends ffi.Union {
  external wire_cst_NullValues_AllColumnsSingle AllColumnsSingle;

  external wire_cst_NullValues_AllColumns AllColumns;

  external wire_cst_NullValues_Named Named;
}

final class wire_cst_null_values extends ffi.Struct {
  @ffi.Int32()
  external int tag;

  external NullValuesKind kind;
}

final class wire_cst_list_prim_u_32_strict extends ffi.Struct {
  external ffi.Pointer<ffi.Uint32> ptr;

  @ffi.Int32()
  external int len;
}
